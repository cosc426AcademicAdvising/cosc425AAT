Index: .idea/shelf/Uncommitted_changes_before_Update_at_3_22_21,_1_52_PM_[Default_Changelist]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21,_1_52_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21,_1_52_PM_[Default_Changelist]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21,_1_52_PM_[Default_Changelist]/shelved.patch	(revision 35026e90a34848b9ef1c9d414ce78f88259ea1ee)
+++ /dev/null	(revision 35026e90a34848b9ef1c9d414ce78f88259ea1ee)
@@ -1,68 +0,0 @@
-Index: ../View.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from tkinter import *\nfrom tkinter import ttk\n# from ttkthemes import ThemedTk\nfrom pubsub import pub  # pip install PyPubSub\nimport tkinter.font as TkFont\n# from PIL import ImageTk, Image  # pip install pillow\n\n\n# import functionss as funct\n\n\ndef donothing():\n    print(\"Something happened...\")\n\n\nclass View:\n    def __init__(self, master, majorL, minorL, subjectL):\n        self.mainwin = master\n        self.mainwin.title(\"Academic Advising Tool\")\n        self.mainwin.geometry(\"{0}x{1}+0+0\".format(master.winfo_screenwidth(), master.winfo_screenheight()))\n        self.mainwin.minsize(width=master.winfo_screenwidth(), height=master.winfo_screenheight())\n        self.mainwin.maxsize(width=master.winfo_screenwidth(), height=master.winfo_screenheight())\n\n        self.majorsList = majorL\n        self.minorsList = minorL\n        self.subjectsList = subjectL\n\n        self.TNR20 = TkFont.Font(family='Times', size='20', weight='bold')\n        self.TNR = TkFont.Font(family='Times')\n\n        self.courseTree_counter = 0\n        self.backupCourseTree_counter = 0\n        self.courseTakenList_counter = 0\n        self.addCourseSearchResult = []\n        self.resultVar = StringVar() # for add course button\n\n        self.FourYearCourses = []\n\n        self.counter= 0\n\n        self.layout()\n        self.menu()\n\n    def layout(self):\n        self.leftFrame = Frame(self.mainwin, highlightbackground='gray', highlightthickness=1)\n        self.leftFrame.pack(expand=1)\n        self.leftFrame.place(relwidth=0.48, relheight=0.91, relx=0.01, rely=0.02)\n\n        self.rightFrame = Frame(self.mainwin, highlightbackground='gray', highlightthickness=1)\n        self.rightFrame.pack(expand=1)\n        self.rightFrame.place(relwidth=0.48, relheight=0.91, relx=0.5, rely=0.02)\n\n        self.courseTakenListFrame = Frame(self.mainwin, highlightbackground='gray', highlightthickness=1)\n        self.courseTakenListFrame.pack(expand=1)\n        self.courseTakenListFrame.place(relwidth=0.48, relheight=0.91, relx=0.01, rely=0.02)\n\n        self.courseTakenListFrame.place_forget() # hide frame\n\n        self.FourYearPlan()\n        self.PlanningWorksheet_layout()\n        self.courseTakenList_layout()\n\n    def FourYearPlan(self):\n        # ============================ Scroll Bar ============================\n        canvas = Canvas(self.leftFrame)\n        canvas.pack(side=LEFT, fill=BOTH, expand=1)\n\n        scrollbar = ttk.Scrollbar(self.leftFrame, orient=VERTICAL, command=canvas.yview)\n        scrollbar.pack(side=RIGHT, fill=Y)\n\n        canvas.configure(yscrollcommand=scrollbar.set)\n        canvas.bind('<Configure>', lambda e: canvas.configure(scrollregion=canvas.bbox(\"all\")))\n        self.innerLeftFrame = Frame(canvas)\n        self.innerLeftFrame.pack(expand=1)\n        canvas.create_window((0, 0), window=self.innerLeftFrame, anchor=NW)\n\n        # ============================ title ============================\n        ProgPlanTitleFrame=Frame(self.innerLeftFrame, width=900, height=50)\n        ProgPlanTitleFrame.pack(expand=1)\n\n        ProgPlanTitle = ttk.Label(ProgPlanTitleFrame, text=\"Four Year Plan\", anchor=CENTER,\n                                  font=('Helvetica', 19))\n        ProgPlanTitle.pack(expand=1)\n        ProgPlanTitle.place(x=360, y=20)\n\n        # ============================ Student Name and ID ============================\n\n        nameIDFrame = Frame(self.innerLeftFrame, width=900, height=50)\n        nameIDFrame.pack(expand=1)\n\n        nameLabel = Label(nameIDFrame, text='Name:')\n        nameLabel.pack(side=LEFT, expand=1)\n        nameLabel.place(x=181, y=20)\n\n        self.name2Entry = ttk.Entry(nameIDFrame)\n        self.name2Entry.pack(side=LEFT, expand=1)\n        self.name2Entry.place(x=230, y=20)\n\n        idLabel = Label(nameIDFrame, text='ID Number:')\n        idLabel.pack(side= RIGHT, expand=1)\n        idLabel.place(x=490, y=20)\n\n        self.id2Entry = ttk.Entry(nameIDFrame, width=8)\n        self.id2Entry.pack(side=RIGHT, expand=1)\n        self.id2Entry.place(x=570, y=20)\n\n        # ====================== memo ========================\n        policyFrame = ttk.LabelFrame(self.innerLeftFrame, height=200, width=700, text='University Policy:')\n        policyFrame.pack()\n\n        self.policyMemoEntry = Text(policyFrame, width=90, height=10)\n        self.policyMemoEntry.pack()\n\n        # ============================ Semester Tables ============================\n        self.semesterFrame = Frame(self.innerLeftFrame, width=900, height=2000)\n        self.semesterFrame.pack(expand=1)\n\n        self.yearCounter=1\n        self.semesterCounter=1\n        self.yPos=50\n        semTable = []\n\n        semTable.append(self.createTable(\"Fall 2020\", 15, self.yPos))\n        semTable.append(self.createTable(\"Spring 2021\", 455, self.yPos))\n        self.yPos = self.yPos + 220\n        semTable.append(self.createTable(\"Fall 2021\", 15, self.yPos))\n        semTable.append(self.createTable(\"Spring 2022\", 455, self.yPos))\n        self.yPos = self.yPos + 220\n        semTable.append(self.createTable(\"Fall 2022\", 15, self.yPos))\n        semTable.append(self.createTable(\"Spring 2023\", 455, self.yPos))\n        self.yPos = self.yPos + 220\n        semTable.append(self.createTable(\"Fall 2023\", 15, self.yPos))\n        semTable.append(self.createTable(\"Spring 2024\", 455, self.yPos))\n        self.yPos = self.yPos + 220\n        # when inserting 'iid' needs to be different\n        '''\n        for c in arg3:\n            semTable[0].self.courseTree.insert(parent='', index='end', iid=self.courseTree_counter, text=\"\", values=(c[0],c[1],c[2],c[3]))\n            self.courseTree_counter += 1\n        '''\n\n        # ============================ Add Semester Table Button ============================\n        self.addSemesterBtn = Button(self.semesterFrame, text=\"Add a semester\")\n        self.addSemesterBtn.pack()\n        self.addSemesterBtn.place(x=120, y=950)\n        self.addSemesterBtn['command'] = lambda: self.createSemesterBtn(\"Extra Semester\")\n\n    def PlanningWorksheet_layout(self):\n        # outer most blank frames left & right\n        width = self.mainwin.winfo_screenwidth()\n        height = self.mainwin.winfo_screenheight()\n        AspectRatio = width/height\n\n        if AspectRatio == 16/10:\n            blank1 = Frame(self.rightFrame, width=50).grid(column=0, row=0, rowspan=15, sticky=(N,E,S,W))\n            #blank2 = Frame(self.rightFrame, width=50).grid(column=5, row=0, rowspan=15, sticky=(N,E,S,W))\n        elif AspectRatio == 16/9:\n            blank1 = Frame(self.rightFrame, width=190).grid(column=0, row=0,rowspan=15,sticky=(N, E, S, W))\n            #blank2 = Frame(self.rightFrame, width=190).grid(column=5, row=0, rowspan=15,sticky=(N, E, S, W))\n        elif AspectRatio == 4/3:\n            blank1 = Frame(self.rightFrame, width=200).grid(column=0, row=0,rowspan=15,sticky=(N, E, S, W))\n            #blank2 = Frame(self.rightFrame, width=160).grid(column=5, row=0, rowspan=15,sticky=(N, E, S, W))\n        elif AspectRatio == 3/2:\n            blank1 = Frame(self.rightFrame, width=160).grid(column=0, row=0,rowspan=15,sticky=(N, E, S, W))\n            #blank2 = Frame(self.rightFrame, width=160).grid(column=5, row=0, rowspan=15,sticky=(N, E, S, W))\n        else:\n            blank1 = Frame(self.rightFrame, width=50).grid(column=0, row=0, rowspan=15, sticky=(N, E, S, W))\n            #blank2 = Frame(self.rightFrame, width=50).grid(column=5, row=0, rowspan=15, sticky=(N, E, S, W))\n\n        self.rightFrame.update()\n        h = self.rightFrame.winfo_height() * .028\n        blank3 = Frame(self.rightFrame, height=h).grid(row=1, column=0, columnspan=5) # before name id\n        blank4 = Frame(self.rightFrame, height=h).grid(row=3, column=0, columnspan=5) # before seasons\n        blank5 = Frame(self.rightFrame, height=h).grid(row=5, column=0, columnspan=5) # before major minor\n        blank6 = Frame(self.rightFrame, height=h).grid(row=7, column=0, columnspan=5) # before cred frame\n        blank7 = Frame(self.rightFrame, height=h).grid(row=9, column=0, columnspan=5) # before enrollment date\n        blank8 = Frame(self.rightFrame, height=h).grid(row=11, column=0, columnspan=5) # before table\n        blank9 = Frame(self.rightFrame, height=h).grid(row=14, column=0, columnspan=5)  # before memo\n\n\n        # ============================ title ============================\n        ProgPlanTitle = ttk.Label(self.rightFrame, text=\"Program Planning Worksheet\", anchor=CENTER,\n                                  font=('Helvetica', 19))\n        ProgPlanTitle.grid(row=0, column=2, columnspan=3, pady=8)\n\n        # ============================ student name ============================\n        nameFrame = Frame(self.rightFrame)\n        nameFrame.grid(row=2, column=1, columnspan=2)\n\n        nameLabel = Label(nameFrame, text='Name:')\n        nameLabel.pack(side=LEFT)\n\n        self.nameEntry = ttk.Entry(nameFrame)\n        self.nameEntry.pack()\n\n        # ============================ student id ============================\n        idFrame = Frame(self.rightFrame)\n        idFrame.grid(row=2, column=3, columnspan=2)\n\n        idLabel = Label(idFrame, text='ID Number:')\n        idLabel.pack(side=LEFT)\n\n        self.idEntry = ttk.Entry(idFrame, width=8, justify=CENTER)\n        self.idEntry.pack()\n\n        # ============================ season ============================\n        self.seasonVar = StringVar()\n\n        seasonFrame = Frame(self.rightFrame, )\n        seasonLabel = Label(seasonFrame, text='Registering for:')\n        fallRadioBtn = ttk.Radiobutton(seasonFrame, text='Fall', variable=self.seasonVar, value='Fall')\n        summerRadioBtn = ttk.Radiobutton(seasonFrame, text='Summer', variable=self.seasonVar, value='Summer')\n        springRadioBtn = ttk.Radiobutton(seasonFrame, text='Spring', variable=self.seasonVar, value='Spring')\n        winterRadioBtn = ttk.Radiobutton(seasonFrame, text='Winter', variable=self.seasonVar, value='Winter')\n\n        seasonFrame.grid(row=4, column=1, columnspan=4)\n        seasonLabel.grid(row=0, column=0, padx=10)\n        fallRadioBtn.grid(row=0, column=1, padx=10)\n        winterRadioBtn.grid(row=0, column=2, padx=10)\n        springRadioBtn.grid(row=0, column=3, padx=10)\n        summerRadioBtn.grid(row=0, column=4)\n\n        # ============================ major & minor ============================\n        careerFrame = Frame(self.rightFrame)\n        careerFrame.grid(row=6, column=1, columnspan=4)\n\n        majorLabel = Label(careerFrame, text='Major(s): ')\n        majorLabel.grid(row=0, column=0)\n\n        self.majorVar = StringVar()\n        self.majorVar.set(self.majorsList[0])\n        majorMenu = ttk.OptionMenu(careerFrame, self.majorVar, *self.majorsList)\n        majorMenu.grid(row=0, column=1)\n\n        mblank = Frame(careerFrame, width=75).grid(row=0, column=2)\n\n        self.minorVar = StringVar()\n        self.minorVar.set(self.minorsList[0])\n        minorMenu = ttk.OptionMenu(careerFrame, self.minorVar, *self.minorsList)\n        minorMenu.grid(row=0, column=4)\n\n        minorLabel = Label(careerFrame, text='Minor(s): ')\n        minorLabel.grid(row=0, column=3)\n\n        # ============================ credits ============================\n        credFrame = Frame(self.rightFrame, )\n        credFrame.grid(row=8, column=1, columnspan=4)\n\n        credLabel1 = Label(credFrame, text='Earned:')\n        self.earnCredEntry = ttk.Entry(credFrame, width=3, justify=CENTER, state=DISABLED)\n        credLabel2 = Label(credFrame, text='credits')\n\n        credLabel1.grid(row=0, column=0)\n        self.earnCredEntry.grid(row=0, column=1)\n        credLabel2.grid(row=0, column=2)\n\n        cblank = Frame(credFrame, width=130).grid(row=0, column=3)\n\n        credLabel3 = Label(credFrame, text='Currently Enrolled in')\n        self.enrollCredVar = IntVar()\n        self.enrollCredEntry = ttk.Entry(credFrame, width=3, textvariable=self.enrollCredVar, justify=CENTER)\n        credLabel4 = Label(credFrame, text='credits')\n\n        credLabel4.grid(row=0, column=4)\n        self.enrollCredEntry.grid(row=0, column=5)\n        credLabel3.grid(row=0, column=6)\n\n        # ====================== Enrollment Date ========================\n        enrlDateFrame = ttk.Frame(self.rightFrame)\n        enrlDateFrame.grid(row=10, column=2, columnspan=2)\n\n        enrlDate = Label(enrlDateFrame, text='Enrollment Date:')\n        enrlDate.pack(side=LEFT)\n\n        self.enrlDateEntry = ttk.Entry(enrlDateFrame, width=8, justify=CENTER)\n        self.enrlDateEntry.pack()\n\n        # ============================ Course table ============================\n        courseTableFrame = Frame(self.rightFrame, )\n        courseTableFrame.grid(row=12, column=1, columnspan=4)\n\n        self.courseTree = ttk.Treeview(courseTableFrame, height=7) # TIP: height is number of rows\n        self.courseTree.pack()\n\n        self.courseTree['columns'] = (\"course#\", \"title\", \"cred\", \"gen/elect\")\n\n        self.courseTree.column(\"#0\", width=0, stretch=NO)   # important\n        self.courseTree.column(\"course#\", anchor=CENTER, width=80) # anchor for the data in the column\n        self.courseTree.column(\"title\", anchor=CENTER, width=295)\n        self.courseTree.column(\"cred\", anchor=CENTER, width=25)\n        self.courseTree.column(\"gen/elect\", anchor=CENTER, width=100)\n\n        self.courseTree.heading(\"course#\", text='Course#', anchor=CENTER) # anchor for the title of the column\n        self.courseTree.heading(\"title\", text='Title', anchor=CENTER)\n        self.courseTree.heading(\"cred\", text='CH', anchor=CENTER)\n        self.courseTree.heading(\"gen/elect\", text='Gen ed/Elect', anchor=CENTER)\n\n        # ===================== backup course ===================\n        backupCourseFrame = Frame(self.rightFrame)\n        backupCourseFrame.grid(row=13, column=1, columnspan=4)\n\n        backuplabel = Label(backupCourseFrame, text=\"Back-up Courses\").pack(anchor=CENTER)\n\n        self.backupCourseTree = ttk.Treeview(backupCourseFrame, height=2)\n        self.backupCourseTree.pack()\n\n        self.backupCourseTree['columns'] = (\"course#\", \"title\", \"cred\", \"gen/elect\")\n\n        self.backupCourseTree.column(\"#0\", width=0, stretch=NO)\n        self.backupCourseTree.column(\"course#\", anchor=CENTER, width=80)\n        self.backupCourseTree.column(\"title\", anchor=CENTER, width=295)\n        self.backupCourseTree.column(\"cred\", anchor=CENTER, width=25)\n        self.backupCourseTree.column(\"gen/elect\", anchor=CENTER, width=100)\n\n        self.backupCourseTree.heading(\"course#\", text='Course#', anchor=CENTER)  # anchor for the title of the column\n        self.backupCourseTree.heading(\"title\", text='Title', anchor=CENTER)\n        self.backupCourseTree.heading(\"cred\", text='CH', anchor=CENTER)\n        self.backupCourseTree.heading(\"gen/elect\", text='Gen ed/Elect', anchor=CENTER)\n\n        # ====================== memo ========================\n        memoFrame = ttk.LabelFrame(self.rightFrame, text='Memo:')\n        memoFrame.grid(row=15, column=2, columnspan=2)\n\n        self.memoEntry = Text(memoFrame, width=50, height=5)\n        self.memoEntry.pack()\n\n        # ===================== add remove course ==================\n        coursebuttonFrame = Frame(self.rightFrame)\n        # courseLabelFrame.grid(row=17, column=1, columnspan=3)\n        coursebuttonFrame.grid(row=12, column=5, padx=20)\n\n        addcoursebutton = ttk.Button(coursebuttonFrame, text=\"Add\", command=self.addCourseButton)\n        addcoursebutton.pack(side=TOP)\n\n        rmcoursebutton = ttk.Button(coursebuttonFrame, text=\"Remove\", command=self.delCourseButton)\n        rmcoursebutton.pack(side=BOTTOM)\n\n        # backup course\n        bcoursebuttonFrame = Frame(self.rightFrame)\n        bcoursebuttonFrame.grid(row=13, column=5, padx=20)\n\n        addbackupbutton = ttk.Button(bcoursebuttonFrame, text=\"Add\", command=self.addBackupCourseButton)\n        addbackupbutton.pack(side=TOP)\n\n        rmbackupbutton = ttk.Button(bcoursebuttonFrame, text=\"Remove\", command=self.delBackupCourseButton)\n        rmbackupbutton.pack(side=TOP)\n\n    def addCourseButton(self):\n        t = Toplevel(self.mainwin)\n        t.wm_title(\"Search for Course\")\n        t.geometry(\"450x125\")\n        t.resizable(width=FALSE, height=FALSE)\n\n        self.mainwin.eval(f'tk::PlaceWindow {str(t)} center')\n\n        # =============== inner functions =================\n\n        def courseSearch(e):\n            course = entry.get()\n            if len(course) > 7:\n                # print(course)\n                if len(course.split()[1]) == 3:\n                    addCourseB2(course)\n                else:\n                    self.resultVar.set(\"\")\n            else:\n                self.resultVar.set(\"\")\n\n        def addCourseB2(courseNumb):\n            if courseNumb != \"\":\n                pub.sendMessage(\"request_course#\", sub=courseNumb.split()[0], cat=courseNumb.split()[1])\n                self.resultVar.set(self.addCourseSearchResult[0] + \" \" + self.addCourseSearchResult[1] + \" \" * 3 +\n                                   self.addCourseSearchResult[2] + \" \" * 3 +\n                                   self.addCourseSearchResult[3])\n\n        def addCourseB3(gen):\n            self.courseTree.insert(parent='', index='end', iid=self.courseTree_counter, text=\"\",\n                                   values=(self.addCourseSearchResult[0] + self.addCourseSearchResult[1],\n                                           self.addCourseSearchResult[2],\n                                           int(float(self.addCourseSearchResult[3])),\n                                           gen.get()))\n            self.courseTree_counter += 1\n            gen.delete(0, END)\n\n            prevcred = self.enrollCredVar.get()\n            self.enrollCredVar.set(prevcred + int(float(self.addCourseSearchResult[3])))\n\n        # =========== for search ===================\n\n        f1 = Frame(t)\n        f1.pack(anchor=CENTER, pady=5)\n\n        l1 = Label(f1, text=\"Course Number:\").pack(side=LEFT)\n        entry = ttk.Entry(f1, width=10, justify=CENTER)\n        entry.pack(side=LEFT)\n\n        entry.bind('<KeyRelease>', courseSearch) # for auto search\n\n        # sbutton =Button(f1, text=\"Search\")\n        # sbutton.pack(side=LEFT)\n        # sbutton['command'] = lambda: addCourseB2(entry.get())\n\n        # =============== for results =================\n        rf = Frame(t)\n        rf.pack(anchor=CENTER)\n\n        resultEntry = ttk.Entry(rf, textvariable = self.resultVar, state=DISABLED, justify=CENTER, width=50)\n        resultEntry.pack(side=TOP)\n\n        # =============== add to tree view ================\n        gf = Frame(t)\n        gf.pack(anchor=CENTER)\n\n        l2 = Label(gf, text=\"gen ed/elect:\").pack(side=LEFT, anchor=NW)\n\n        genEntry = ttk.Entry(gf)\n        genEntry.pack(side=TOP)\n\n        addbutton = Button(gf, text=\"Add\", command=lambda: addCourseB3(genEntry))\n        addbutton.pack(side=TOP)\n\n    def delCourseButton(self):\n        for course in self.courseTree.selection():\n            prevcred = self.enrollCredVar.get()\n            self.enrollCredVar.set(prevcred -  int(float(self.courseTree.item(course)['values'][2])) )\n\n            self.courseTree.delete(course)\n            self.courseTree_counter -= 1\n\n    def addBackupCourseButton(self):\n        t = Toplevel(self.mainwin)\n        t.wm_title(\"Search for Backup Course\")\n        t.geometry(\"450x125\")\n        t.resizable(width=FALSE, height=FALSE)\n\n        self.mainwin.eval(f'tk::PlaceWindow {str(t)} center')\n\n        # =============== inner functions =================\n\n        def courseSearch(e):\n            course = entry.get()\n            if len(course) > 7:\n                if len(course.split()[1]) == 3:\n                    addCourseB2(course)\n                else:\n                    self.resultVar.set(\"\")\n            else:\n                self.resultVar.set(\"\")\n\n        def addCourseB2(courseNumb):\n            if courseNumb != \"\":\n                pub.sendMessage(\"request_course#\", sub=courseNumb.split()[0], cat=courseNumb.split()[1])\n                self.resultVar.set(self.addCourseSearchResult[0] + \" \" + self.addCourseSearchResult[1] + \" \" * 3 +\n                                   self.addCourseSearchResult[2] + \" \" * 3 +\n                                   self.addCourseSearchResult[3])\n\n        def addCourseB3(gen):\n            self.backupCourseTree.insert(parent='', index='end', iid=self.backupCourseTree_counter, text=\"\",\n                                   values=(self.addCourseSearchResult[0] + self.addCourseSearchResult[1],\n                                           self.addCourseSearchResult[2],\n                                           int(float(self.addCourseSearchResult[3])),\n                                           gen.get()))\n            self.backupCourseTree_counter += 1\n            gen.delete(0, END)\n\n            prevcred = self.enrollCredVar.get()\n            self.enrollCredVar.set(prevcred + int(float(self.addCourseSearchResult[3])))\n\n        # =========== for search ===================\n\n        f1 = Frame(t)\n        f1.pack(anchor=CENTER, pady=5)\n\n        l1 = Label(f1, text=\"Course Number:\").pack(side=LEFT)\n        entry = ttk.Entry(f1, width=10, justify=CENTER)\n        entry.pack(side=LEFT)\n\n        entry.bind('<KeyRelease>', courseSearch) # for auto search\n\n        # =============== for results =================\n        rf = Frame(t)\n        rf.pack(anchor=CENTER)\n\n        resultEntry = ttk.Entry(rf, textvariable = self.resultVar, state=DISABLED, justify=CENTER, width=50)\n        resultEntry.pack(side=TOP)\n\n        # =============== add to tree view ================\n        gf = Frame(t)\n        gf.pack(anchor=CENTER)\n\n        l2 = Label(gf, text=\"gen ed/elect:\").pack(side=LEFT, anchor=NW)\n\n        genEntry = ttk.Entry(gf)\n        genEntry.pack(side=TOP)\n\n        addbutton = Button(gf, text=\"Add\", command=lambda: addCourseB3(genEntry))\n        addbutton.pack(side=TOP)\n\n    def delBackupCourseButton(self):\n        for course in self.backupCourseTree.selection():\n            self.backupCourseTree.delete(course)\n            self.backupCourseTree_counter -= 1\n\n    def populatePPW(self, arg1, arg2, arg3, arg4, arg5, arg6):  # (py dict, total cred, 2d course array, course size)\n        self.FourYearCourses.clear()\n        self.FourYearCourses = arg6\n\n        # delete what was previously there then insert\n        self.nameEntry.delete(0, END)\n        self.nameEntry.insert(END, arg1['name'])\n\n        self.idEntry.delete(0, END)\n        self.idEntry.insert(END, arg1['s_id'])\n\n        self.seasonVar.set(arg1['registering_for'])\n\n        cnt = len(self.majorsList)\n        index = 0\n        for i in range(cnt):\n            if arg1['major'] == self.majorsList[i]:\n                index = i\n        self.majorVar.set(self.majorsList[index])\n\n        cnt = len(self.minorsList)\n        index = 0\n        for i in range(cnt):\n            if arg1['minor'] == self.minorsList[i]:\n                index = i\n        self.minorVar.set(self.minorsList[index])\n\n        self.earnCredEntry['state'] = NORMAL\n        self.earnCredEntry.delete(0, END)\n        self.earnCredEntry.insert(END, arg1['credits'])\n        self.earnCredEntry['state'] = 'readonly'\n\n        self.enrollCredVar.set(arg2)\n        #self.enrollCredEntry.delete(0, END)\n        #self.enrollCredEntry.insert(END, arg2)\n\n        self.enrlDateEntry.delete(0, END)\n        self.enrlDateEntry.insert(END, arg1['enrll'])\n\n        self.memoEntry.delete('1.0', 'end')\n        self.memoEntry.insert('1.0', arg1['memo'])\n\n        # clear tree views\n        for course in self.courseTree.get_children():\n            self.courseTree.delete(course)\n        self.courseTree_counter = 0\n\n        for course in self.backupCourseTree.get_children():\n            self.backupCourseTree.delete(course)\n        self.backupCourseTree_counter = 0\n\n        # when inserting 'iid' needs to be different\n        for c in arg3:\n            self.courseTree.insert(parent='', index='end', iid=self.courseTree_counter, text=\"\", values=(c[0],c[1],c[2],c[3]))\n            self.courseTree_counter += 1\n\n        for c in arg5:\n            self.backupCourseTree.insert(parent='', index='end', iid=self.backupCourseTree_counter, text=\"\", values=(c[0],c[1],c[2],c[3]))\n            self.backupCourseTree_counter += 1\n\n        self.courseTakenList_reset()\n        self.courseTakenList_fill()\n\n    def populateFYP(self, arg1):\n        # delete what was previously there then insert\n        self.name2Entry.delete(0, END)\n        self.name2Entry.insert(END, arg1['name'])\n\n        self.id2Entry.delete(0, END)\n        self.id2Entry.insert(END, arg1['s_id'])\n\n        self.policyMemoEntry.delete('1.0', 'end')\n        self.policyMemoEntry.insert('1.0', arg1['memo'])\n\n    def courseTakenList_layout(self):\n        label = Label(self.courseTakenListFrame, text=\"Course Taken List\", font=('Helvetica', 19))\n        label.pack(anchor=CENTER, side=TOP, pady=20)\n\n        self.courseTakenListTree = ttk.Treeview(self.courseTakenListFrame, show=\"tree\", height=38)\n        self.courseTakenListTree.pack(side=TOP, padx=50, pady=10, fill=X)\n\n        self.courseTakenListTree.column(\"#0\")\n\n        for subj in self.subjectsList:\n            self.courseTakenListTree.insert(parent='', index='end', iid=self.courseTakenList_counter, text=str(subj))\n            self.courseTakenList_counter += 1\n\n    def courseTakenList_reset(self):\n        for subj in self.courseTakenListTree.get_children():\n            self.courseTakenListTree.delete(subj)\n        self.courseTakenList_counter = 0\n\n        for subj in self.subjectsList:\n            self.courseTakenListTree.insert(parent='', index='end', iid=self.courseTakenList_counter, text=str(subj))\n            self.courseTakenList_counter += 1\n\n    def courseTakenList_fill(self):\n        for sem in self.FourYearCourses:\n            for course in sem:\n                for id in self.courseTakenListTree.get_children():\n                    if course[1] == self.courseTakenListTree.item(id)['text']:\n                        name = str(course[1] + \" \" + course[2] + \"\\t\" + course[3])\n                        self.courseTakenListTree.insert(parent=str(id), index='end', iid=self.courseTakenList_counter, text=name)\n                        self.courseTakenList_counter += 1\n\n        for id in self.courseTakenListTree.get_children():\n            if not self.courseTakenListTree.get_children(id):\n                self.courseTakenListTree.delete(id)\n\n\n    # menus declaration\n    def menu(self):\n        menu = Menu(self.mainwin, tearoff=0)\n        self.mainwin.config(menu=menu)\n\n        schedule = Menu(menu)\n        menu.add_cascade(label='Schedule', menu=schedule)\n        self.scheduleMenu(schedule)\n\n        load = Menu(menu)\n        menu.add_cascade(label='View', menu=load)\n        self.loadMenu(load)\n\n        DB = Menu(menu)\n        menu.add_cascade(label='Update DB', menu=DB)\n        self.DataBaseMenu(DB)\n\n        theme = Menu(menu)\n        menu.add_cascade(label='Themes', menu=theme)\n        self.themeMenu(theme)\n\n    def themeMenu(self, theme):\n        #s = ThemedTk(self.mainwin)\n        '''\n        def lightMode(s):\n            s.set_theme(\"plastik\")\n        def darkMode(s):\n            s.set_theme(\"black\")\n        '''\n        #theme.add_command(label='Light Mode', command=)\n        theme.add_command(label='Dark Mode')\n\n    # schedule menu dropdown\n    def scheduleMenu(self, schedule):\n        schedule.add_command(label='New...', command=self.newSchedule)\n        schedule.add_command(label='Open...', command=self.openSchedule)\n\n        recent = Menu(schedule)\n        schedule.add_cascade(label=\"Open recent...\", menu=recent)\n        recent.add_separator()\n        recent.add_command(label='Clear', command=self.openRecentSchedule)\n\n        schedule.add_separator()\n        schedule.add_command(label='Save', command=self.saveSchedule)\n        schedule.add_command(label=\"Save as...\", command=self.saveAsSchedule)\n        schedule.add_separator()\n        schedule.add_command(label='Export', command=self.exportSchedule)\n        schedule.add_command(label='Print', command=self.printSchedule)\n\n    # load menu drop down\n    def loadMenu(self, major):\n        major.add_command(label='Four Year Plan', command=self.showFourYearPlan)\n        major.add_command(label='Course Taken List', command=self.showCourseTakenList)\n        major.add_separator()\n        major.add_command(label='Major Checklist')\n        major.add_command(label='Minor Checklist')\n\n    # data base menu dropdown\n    def DataBaseMenu(self, DB):\n        DB.add_command(label='Current Semester Course')\n        DB.add_separator()\n        DB.add_command(label='Add/Remove a Department')\n        DB.add_command(label='Add/remove a Major')\n        DB.add_command(label='Add/Remove a minor')\n\n    def newSchedule(self):\n        # pub.sendMessage(\"New Menu Dropdown Pressed\")\n        self.nameEntry.delete(0, END)\n        self.idEntry.delete(0, END)\n        self.seasonVar.set('')\n\n        self.earnCredEntry['state'] = NORMAL\n        self.earnCredEntry.delete(0, END)\n        self.earnCredEntry['state'] = 'readonly'\n\n        self.enrollCredEntry.delete(0, END)\n\n        self.enrlDateEntry.delete(0, END)\n\n        self.memoEntry.delete('1.0', 'end')\n\n        for course in self.courseTree.get_children():\n            self.courseTree.delete(course)\n        self.courseTree_counter = 0\n\n        for course in self.backupCourseTree.get_children():\n            self.backupCourseTree.delete(course)\n        self.backupCourseTree_counter = 0\n\n        self.courseTakenList_reset()\n\n    def openSchedule(self):\n        t = Toplevel(self.mainwin)\n        t.wm_title(\"Search for Student\")\n        t.geometry(\"450x125\")\n        t.resizable(width=FALSE, height=FALSE)\n\n        self.mainwin.eval(f'tk::PlaceWindow {str(t)} center')\n\n        def openScheduleSearchButton(name, id):\n            if name != \"\" and id != \"\":\n                pub.sendMessage(\"request_PPW\", name=name, id=int(id))\n                t.destroy()\n\n        nameFrame = Frame(t)\n        nameFrame.pack(side=TOP,anchor='w', padx=20, pady=10)\n\n        idFrame = Frame(t)\n        idFrame.pack(side=TOP, anchor='w', padx=20)\n\n        butFrame = Frame(t)\n        butFrame.pack(side=BOTTOM, anchor=CENTER, pady=10)\n\n        label2 = Label(nameFrame, text='First name:').pack(side=LEFT)\n        fnameE = ttk.Entry(nameFrame, width=10)\n        fnameE.pack(side=LEFT)\n\n        lnameE = ttk.Entry(nameFrame, width=15)\n        lnameE.pack(side=RIGHT)\n        label3 = Label(nameFrame, text='Last name:').pack(side=RIGHT)\n\n        label3 = Label(idFrame, text='Student Id:').pack(side=LEFT)\n        idE = ttk.Entry(idFrame, width=10)\n        idE.pack(side=LEFT)\n\n        searchB = Button(butFrame, text='Search')\n        searchB.pack()\n\n        searchB['command'] = lambda: openScheduleSearchButton(fnameE.get() + \" \" + lnameE.get(), idE.get())\n\n    def showFourYearPlan(self):\n        self.courseTakenListFrame.place_forget()\n        self.leftFrame.place(relwidth=0.48, relheight=0.91, relx=0.01, rely=0.02)\n\n    def showCourseTakenList(self):\n        self.leftFrame.place_forget()\n        self.courseTakenListFrame.place(relwidth=0.48, relheight=0.91, relx=0.01, rely=0.02)\n\n    def createTable(self, semester, x, y):\n        if self.semesterCounter % 2 != 0:\n            self.yearCounter += 1\n\n        semesterLabel = Label(self.semesterFrame, text=semester, font=('Helvetica', 15))\n        semesterLabel.pack(expand=1)\n        semesterLabel.place(x=x, y=y-25)\n\n        self.semesterTree = ttk.Treeview(self.semesterFrame, height=7)  # TIP: height is number of rows\n        self.semesterTree.pack(expand=1)\n        self.semesterTree.place(x=x, y=y)\n\n        self.semesterTree['columns'] = (\"course#\", \"title\", \"cred\")\n\n        self.semesterTree.column(\"#0\", width=0, stretch=NO)  # important\n        self.semesterTree.column(\"course#\", anchor=CENTER, width=75)  # anchor for the data in the column\n        self.semesterTree.column(\"title\", anchor=W, width=295)\n        self.semesterTree.column(\"cred\", anchor=CENTER, width=62)\n        # self.semesterTree.column(\"taken\", anchor=CENTER, width=30)\n\n        self.semesterTree.heading(\"course#\", text='Course #', anchor=CENTER)  # anchor for the title of the column\n        self.semesterTree.heading(\"title\", text='Title', anchor=CENTER)\n        self.semesterTree.heading(\"cred\", text='Crd. Hr.', anchor=CENTER)\n        # self.semesterTree.heading(\"taken\", text='Cls. Taken', anchor=CENTER)\n\n    def createSemesterBtn(self, semester):\n        if self.counter == 1:\n            self.createTable(semester, 455, self.yPos)\n            self.yPos = self.yPos + 220\n            self.addSemesterBtn.place(x=15, y=self.yPos)\n            self.counter=0\n        else:\n            self.createTable(semester, 15, self.yPos)\n            self.addSemesterBtn.place(x=455, y=self.yPos)\n            self.counter=1\n\n\n    def openRecentSchedule(self):\n        print(\"Open schedule\")\n\n    def saveSchedule(self):\n        print(\"Saved schedule\")\n\n    def saveAsSchedule(self):\n        print(\"Save schedule as..\")\n\n    def exportSchedule(self):\n        print(\"Export schedule\")\n\n    def printSchedule(self):\n        print(\"Print schedule\")
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../View.py b/../View.py
---- a/../View.py	(revision f89b28b361040d7c16624ad813098656ee68d662)
-+++ b/../View.py	(date 1616395856610)
-@@ -145,6 +145,8 @@
-         self.addSemesterBtn.place(x=120, y=950)
-         self.addSemesterBtn['command'] = lambda: self.createSemesterBtn("Extra Semester")
- 
-+        self.populateFYP()
-+
-     def PlanningWorksheet_layout(self):
-         # outer most blank frames left & right
-         width = self.mainwin.winfo_screenwidth()
-@@ -564,8 +566,11 @@
-         self.courseTakenList_reset()
-         self.courseTakenList_fill()
- 
--    def populateFYP(self, arg1):
-+    def populateFYP(self):
-+        print(self.FourYearCourses[0])
-+
-         # delete what was previously there then insert
-+        '''
-         self.name2Entry.delete(0, END)
-         self.name2Entry.insert(END, arg1['name'])
- 
-@@ -574,6 +579,7 @@
- 
-         self.policyMemoEntry.delete('1.0', 'end')
-         self.policyMemoEntry.insert('1.0', arg1['memo'])
-+        '''
- 
-     def courseTakenList_layout(self):
-         label = Label(self.courseTakenListFrame, text="Course Taken List", font=('Helvetica', 19))
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"d3030d7f-4345-4108-a3de-06b66e2166e9\" name=\"Default Changelist\" comment=\"GUI layout changes\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../View.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../View.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\n      <list>\n        <option value=\"quincden &lt;78387066+quincden@users.noreply.github.com&gt;\" />\n      </list>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"ProjectId\" id=\"1ooOcHdYy8DDlZBmYkOTgWDTh3m\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"TODO_SCOPE\" value=\"All Places\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../jsonAppend.py\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\n  </component>\n  <component name=\"RunManager\" selected=\"Python.Controller\">\n    <configuration name=\"Controller (1)\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"/usr/bin/python3.8\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$USER_HOME$/Devin\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$USER_HOME$/Devin/Controller.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Controller\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"/usr/bin/python3.9\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/..\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../Controller.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Model\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/..\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../Model.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"View\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/..\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../View.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Python.Controller\" />\n      <item itemvalue=\"Python.Controller (1)\" />\n      <item itemvalue=\"Python.Model\" />\n      <item itemvalue=\"Python.View\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.Controller\" />\n        <item itemvalue=\"Python.Model\" />\n        <item itemvalue=\"Python.View\" />\n        <item itemvalue=\"Python.Controller (1)\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"d3030d7f-4345-4108-a3de-06b66e2166e9\" name=\"Default Changelist\" comment=\"\" />\n      <created>1613949556023</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1613949556023</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Getting files\">\n      <created>1613949592873</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613949592873</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Getting files\">\n      <created>1613949845171</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613949845171</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Getting files\">\n      <created>1613960554545</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613960554545</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Getting files\">\n      <created>1613960559883</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613960559883</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Getting files\">\n      <created>1614029465316</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614029465316</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Major list dropdown\">\n      <created>1614034446593</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614034446593</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Major list dropdown\">\n      <created>1614134625833</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614134625833</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Reformatting Planning Sheet and Radio Buttons\">\n      <created>1614373713103</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614373713103</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Reformatting Planning Sheet and Radio Buttons\">\n      <created>1614373718853</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614373718853</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Reformatted and Radio Buttons\">\n      <created>1614374493258</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614374493258</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Reformatting Planning Sheet and Radio Buttons\">\n      <created>1614634080019</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614634080019</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Positioning Table\">\n      <created>1614638355548</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638355548</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Positioning Table\">\n      <created>1614638370535</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638370535</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Positioning Backup course table\">\n      <created>1614638613869</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638613869</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Updated for new json format&#10;&#10;Load backup courses and memo\">\n      <created>1614638687459</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638687459</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Positioning Backup course table\">\n      <created>1614642646848</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614642646848</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Positioning Backup course table\">\n      <created>1614900036709</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614900036709</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Positioning Backup course table\">\n      <created>1615160540514</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615160540514</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Positioning Backup course table\">\n      <created>1615362753449</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615362753449</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Positioning Backup course table\">\n      <created>1615412693079</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615412693079</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Positioning Backup course table\">\n      <created>1615875121724</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615875121724</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Positioning Backup course table\">\n      <created>1615949462988</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615949462988</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Implemented a majority of Four year Plan\">\n      <created>1615964814004</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615964814004</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"ttk Scrollbar\">\n      <created>1616014758814</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616014758814</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"ttk Scrollbar\">\n      <created>1616014803830</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616014803830</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"GUI layout changes and populating FYP\">\n      <created>1616114589948</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616114589948</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"GUI layout changes\">\n      <created>1616116033357</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616116033357</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"28\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ID_ORDER\">\n      <list>\n        <option value=\"Default.Root\" />\n        <option value=\"Default.Author\" />\n        <option value=\"Default.Date\" />\n        <option value=\"Default.Subject\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Getting files\" />\n    <MESSAGE value=\"Major list dropdown\" />\n    <MESSAGE value=\"Reformatted and Radio Buttons\" />\n    <MESSAGE value=\"Reformatting Planning Sheet and Radio Buttons\" />\n    <MESSAGE value=\"Positioning Table\" />\n    <MESSAGE value=\"Updated for new json format&#10;&#10;Load backup courses and memo\" />\n    <MESSAGE value=\"Positioning Backup course table\" />\n    <MESSAGE value=\"Implemented a majority of Four year Plan\" />\n    <MESSAGE value=\"ttk Scrollbar\" />\n    <MESSAGE value=\"GUI layout changes and populating FYP\" />\n    <MESSAGE value=\"GUI layout changes\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"GUI layout changes\" />\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision f89b28b361040d7c16624ad813098656ee68d662)
-+++ b/.idea/workspace.xml	(date 1616435549087)
-@@ -2,7 +2,6 @@
- <project version="4">
-   <component name="ChangeListManager">
-     <list default="true" id="d3030d7f-4345-4108-a3de-06b66e2166e9" name="Default Changelist" comment="GUI layout changes">
--      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/../View.py" beforeDir="false" afterPath="$PROJECT_DIR$/../View.py" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-@@ -126,8 +125,8 @@
-       <method v="2" />
-     </configuration>
-     <list>
--      <item itemvalue="Python.Controller" />
-       <item itemvalue="Python.Controller (1)" />
-+      <item itemvalue="Python.Controller" />
-       <item itemvalue="Python.Model" />
-       <item itemvalue="Python.View" />
-     </list>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_3_23_21__5_26_PM__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_21__5_26_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_21__5_26_PM__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_21__5_26_PM__Default_Changelist_.xml	(revision 35026e90a34848b9ef1c9d414ce78f88259ea1ee)
+++ /dev/null	(revision 35026e90a34848b9ef1c9d414ce78f88259ea1ee)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_3_23_21,_5_26_PM_[Default_Changelist]" date="1616534798506" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_21,_5_26_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 3/23/21, 5:26 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_3_23_21,_5_26_PM_[Default_Changelist]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_21,_5_26_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_21,_5_26_PM_[Default_Changelist]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_21,_5_26_PM_[Default_Changelist]/shelved.patch	(revision 35026e90a34848b9ef1c9d414ce78f88259ea1ee)
+++ /dev/null	(revision 35026e90a34848b9ef1c9d414ce78f88259ea1ee)
@@ -1,272 +0,0 @@
-Index: ../Controller.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from View import View\nfrom Model import Model\nfrom tkinter import *\n# from tkinter import ttk\nfrom pubsub import pub\n\n\nclass Controller:\n    def __init__(self, master):\n        self.model = Model()\n        self.view = View(master, self.model.listAllMajors(), self.model.listAllMinors(), self.model.getSubjects())\n\n        pub.subscribe(self.newSchedule, \"New Menu Dropdown Pressed\")\n\n        # for populating planning worksheet\n        pub.subscribe(self.planningWorksheet_open,\"request_PPW\")\n        pub.subscribe(self.view.planningWorksheet_fill,\"PPW_information\")\n        pub.subscribe(self.addCourse, \"request_course#\")\n\n        # for populating Four Year Plan\n        # pub.subscribe(self.view.populateFYP, \"FYP_information\")\n\n    def newSchedule(self):\n        self.schedule = Toplevel()\n        self.schedule.geometry('1000x600')\n        # Need to fill title with name of student from database\n        self.schedule.title(\"Insert Person Name Here\")\n        # Need to send information from database to this new window\n\n    def planningWorksheet_open(self, name, id):\n        # self.model.getStudent(\"Bob Robert\", \"7654321\")\n        self.model.getStudent(name, id)\n\n    def addCourse(self, sub, cat):\n        self.view.addCourseSearchResult = list( self.model.getCoursebySubCat(sub.upper(), cat) )\n\nif __name__==\"__main__\":\n    root = Tk()\n    app = Controller(root)\n    root.mainloop()\n\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../Controller.py b/../Controller.py
---- a/../Controller.py	(revision 86eabedf844c4ab7f8e5118f938ae345c211359c)
-+++ b/../Controller.py	(date 1616466595575)
-@@ -18,7 +18,8 @@
-         pub.subscribe(self.addCourse, "request_course#")
- 
-         # for populating Four Year Plan
--        # pub.subscribe(self.view.populateFYP, "FYP_information")
-+        pub.subscribe(self.fourYearPlan_open, "request_FYP")
-+        pub.subscribe(self.view.fourYearPlan_fill, "FYP_information")
- 
-     def newSchedule(self):
-         self.schedule = Toplevel()
-@@ -27,12 +28,16 @@
-         self.schedule.title("Insert Person Name Here")
-         # Need to send information from database to this new window
- 
-+    def fourYearPlan_open(self, name, id):
-+        # self.model.getStudent("Bob Robert", "7654321")
-+        self.model.getStudent(name, id)
-+
-     def planningWorksheet_open(self, name, id):
-         # self.model.getStudent("Bob Robert", "7654321")
-         self.model.getStudent(name, id)
- 
-     def addCourse(self, sub, cat):
--        self.view.addCourseSearchResult = list( self.model.getCoursebySubCat(sub.upper(), cat) )
-+        self.view.addCourseSearchResult = list( self.model.getCoursebySubCat(sub.upper(), cat))
- 
- if __name__=="__main__":
-     root = Tk()
-Index: ../View.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from tkinter import *\nfrom tkinter import ttk\n# from ttkthemes import ThemedTk\nfrom pubsub import pub  # pip install PyPubSub\n# import tkinter.font as TkFont\n# from PIL import ImageTk, Image  # pip install pillow\n\n\n# import functionss as funct\n\n\ndef donothing():\n    print(\"Something happened...\")\n\n\nclass View:\n    def __init__(self, master, majorL, minorL, subjectL):\n        self.mainwin = master\n        self.mainwin.title(\"Academic Advising Tool\")\n        self.mainwin.geometry(\"{0}x{1}+0+0\".format(master.winfo_screenwidth(), master.winfo_screenheight()))\n        self.mainwin.minsize(width=master.winfo_screenwidth(), height=master.winfo_screenheight())\n        self.mainwin.maxsize(width=master.winfo_screenwidth(), height=master.winfo_screenheight())\n\n        self.majorsList = majorL\n        self.minorsList = minorL\n        self.subjectsList = subjectL\n\n        self.TVstyle = ttk.Style()\n        self.TVstyle.configure(\"mystyle.Treeview\", font=('Helvetica', 12))\n        self.TVstyle.configure(\"mystyle.Treeview.Heading\", font=('Helvetica', 12))\n\n        self.courseTree_counter = 0\n        self.backupCourseTree_counter = 0\n        self.courseTakenList_counter = 0\n        self.addCourseSearchResult = []\n        self.resultVar = StringVar() # for add course button\n\n        self.fourYearCourses = []\n\n        self.counter= 0\n\n        self.layout()\n        self.menuBar()\n\n    def layout(self):\n        self.leftFrame = Frame(self.mainwin, highlightbackground='gray', highlightthickness=1)\n        self.leftFrame.pack(expand=1)\n        self.leftFrame.place(relwidth=0.48, relheight=0.91, relx=0.01, rely=0.02)\n\n        self.rightFrame = Frame(self.mainwin, highlightbackground='gray', highlightthickness=1)\n        self.rightFrame.pack(expand=1)\n        self.rightFrame.place(relwidth=0.48, relheight=0.91, relx=0.5, rely=0.02)\n\n        self.courseTakenListFrame = Frame(self.mainwin, highlightbackground='gray', highlightthickness=1)\n        self.courseTakenListFrame.pack(expand=1)\n        self.courseTakenListFrame.place(relwidth=0.48, relheight=0.91, relx=0.01, rely=0.02)\n\n        self.courseTakenListFrame.place_forget() # hide frame\n\n        self.FourYearPlan()\n        self.planningWorksheet_layout()\n        self.courseTakenList_layout()\n\n    def FourYearPlan(self):\n        # ============================ Scroll Bar ============================\n        canvas = Canvas(self.leftFrame)\n        canvas.pack(side=LEFT, fill=BOTH, expand=1)\n\n        scrollbar = ttk.Scrollbar(self.leftFrame, orient=VERTICAL, command=canvas.yview)\n        scrollbar.pack(side=RIGHT, fill=Y)\n\n        canvas.configure(yscrollcommand=scrollbar.set)\n        canvas.bind('<Configure>', lambda e: canvas.configure(scrollregion=canvas.bbox(\"all\")))\n        self.innerLeftFrame = Frame(canvas)\n        self.innerLeftFrame.pack(expand=1)\n        canvas.create_window((0, 0), window=self.innerLeftFrame, anchor=NW)\n\n        # ============================ title ============================\n        ProgPlanTitleFrame=Frame(self.innerLeftFrame, width=900, height=50)\n        ProgPlanTitleFrame.pack(expand=1)\n\n        ProgPlanTitle = ttk.Label(ProgPlanTitleFrame, text=\"Four Year Plan\", anchor=CENTER,\n                                  font=('Helvetica', 19))\n        ProgPlanTitle.pack(expand=1)\n        ProgPlanTitle.place(x=360, y=20)\n\n        # ============================ Student Name and ID ============================\n\n        nameIDFrame = Frame(self.innerLeftFrame, width=900, height=50)\n        nameIDFrame.pack(expand=1)\n\n        nameLabel = Label(nameIDFrame, text='Name:')\n        nameLabel.pack(side=LEFT, expand=1)\n        nameLabel.place(x=181, y=20)\n\n        self.name2Entry = ttk.Entry(nameIDFrame)\n        self.name2Entry.pack(side=LEFT, expand=1)\n        self.name2Entry.place(x=230, y=20)\n\n        idLabel = Label(nameIDFrame, text='ID Number:')\n        idLabel.pack(side= RIGHT, expand=1)\n        idLabel.place(x=490, y=20)\n\n        self.id2Entry = ttk.Entry(nameIDFrame, width=8)\n        self.id2Entry.pack(side=RIGHT, expand=1)\n        self.id2Entry.place(x=570, y=20)\n\n        # ====================== memo ========================\n        policyFrame = ttk.LabelFrame(self.innerLeftFrame, height=200, width=700, text='University Policy:')\n        policyFrame.pack()\n\n        self.policyMemoEntry = Text(policyFrame, width=90, height=10)\n        self.policyMemoEntry.pack()\n\n        # ============================ Semester Tables ============================\n        self.semesterFrame = Frame(self.innerLeftFrame, width=900, height=2000)\n        self.semesterFrame.pack(expand=1)\n\n        self.yearCounter=1\n        self.semesterCounter=1\n        self.yPos=50\n        semTable = []\n\n        semTable.append(self.createTable(\"Fall 2020\", 15, self.yPos))\n        semTable.append(self.createTable(\"Spring 2021\", 455, self.yPos))\n        self.yPos = self.yPos + 220\n        semTable.append(self.createTable(\"Fall 2021\", 15, self.yPos))\n        semTable.append(self.createTable(\"Spring 2022\", 455, self.yPos))\n        self.yPos = self.yPos + 220\n        semTable.append(self.createTable(\"Fall 2022\", 15, self.yPos))\n        semTable.append(self.createTable(\"Spring 2023\", 455, self.yPos))\n        self.yPos = self.yPos + 220\n        semTable.append(self.createTable(\"Fall 2023\", 15, self.yPos))\n        semTable.append(self.createTable(\"Spring 2024\", 455, self.yPos))\n        self.yPos = self.yPos + 220\n        # when inserting 'iid' needs to be different\n        '''\n        for c in arg3:\n            semTable[0].self.courseTree.insert(parent='', index='end', iid=self.courseTree_counter, text=\"\", values=(c[0],c[1],c[2],c[3]))\n            self.courseTree_counter += 1\n        '''\n\n        # ============================ Add Semester Table Button ============================\n        self.addSemesterBtn = Button(self.semesterFrame, text=\"Add a semester\")\n        self.addSemesterBtn.pack()\n        self.addSemesterBtn.place(x=120, y=950)\n        self.addSemesterBtn['command'] = lambda: self.createSemesterBtn(\"Extra Semester\")\n\n    def planningWorksheet_layout(self):\n        # outer most blank frames left & right\n        width = self.mainwin.winfo_screenwidth()\n        height = self.mainwin.winfo_screenheight()\n        AspectRatio = width/height\n\n        if AspectRatio == 16/10:\n            blank1 = Frame(self.rightFrame, width=50).grid(column=0, row=0, rowspan=15, sticky=(N,E,S,W))\n            #blank2 = Frame(self.rightFrame, width=50).grid(column=5, row=0, rowspan=15, sticky=(N,E,S,W))\n        elif AspectRatio == 16/9:\n            blank1 = Frame(self.rightFrame, width=190).grid(column=0, row=0,rowspan=15,sticky=(N, E, S, W))\n            #blank2 = Frame(self.rightFrame, width=190).grid(column=5, row=0, rowspan=15,sticky=(N, E, S, W))\n        elif AspectRatio == 4/3:\n            blank1 = Frame(self.rightFrame, width=200).grid(column=0, row=0,rowspan=15,sticky=(N, E, S, W))\n            #blank2 = Frame(self.rightFrame, width=160).grid(column=5, row=0, rowspan=15,sticky=(N, E, S, W))\n        elif AspectRatio == 3/2:\n            blank1 = Frame(self.rightFrame, width=160).grid(column=0, row=0,rowspan=15,sticky=(N, E, S, W))\n            #blank2 = Frame(self.rightFrame, width=160).grid(column=5, row=0, rowspan=15,sticky=(N, E, S, W))\n        else:\n            blank1 = Frame(self.rightFrame, width=50).grid(column=0, row=0, rowspan=15, sticky=(N, E, S, W))\n            #blank2 = Frame(self.rightFrame, width=50).grid(column=5, row=0, rowspan=15, sticky=(N, E, S, W))\n\n        self.rightFrame.update()\n        h = self.rightFrame.winfo_height() * .028\n        blank3 = Frame(self.rightFrame, height=h).grid(row=1, column=0, columnspan=5) # before name id\n        blank4 = Frame(self.rightFrame, height=h).grid(row=3, column=0, columnspan=5) # before seasons\n        blank5 = Frame(self.rightFrame, height=h).grid(row=5, column=0, columnspan=5) # before major minor\n        blank6 = Frame(self.rightFrame, height=h).grid(row=7, column=0, columnspan=5) # before cred frame\n        blank7 = Frame(self.rightFrame, height=h).grid(row=9, column=0, columnspan=5) # before enrollment date\n        blank8 = Frame(self.rightFrame, height=h).grid(row=11, column=0, columnspan=5) # before table\n        blank9 = Frame(self.rightFrame, height=h).grid(row=14, column=0, columnspan=5)  # before memo\n\n\n        # ============================ title ============================\n        ProgPlanTitle = ttk.Label(self.rightFrame, text=\"Program Planning Worksheet\", anchor=CENTER,\n                                  font=('Helvetica', 19))\n        ProgPlanTitle.grid(row=0, column=2, columnspan=3, pady=8)\n\n        # ============================ student name ============================\n        nameFrame = Frame(self.rightFrame)\n        nameFrame.grid(row=2, column=1, columnspan=2)\n\n        nameLabel = Label(nameFrame, text='Name:')\n        nameLabel.pack(side=LEFT)\n\n        self.nameEntry = ttk.Entry(nameFrame)\n        self.nameEntry.pack()\n\n        # ============================ student id ============================\n        idFrame = Frame(self.rightFrame)\n        idFrame.grid(row=2, column=3, columnspan=2)\n\n        idLabel = Label(idFrame, text='ID Number:')\n        idLabel.pack(side=LEFT)\n\n        self.idEntry = ttk.Entry(idFrame, width=8, justify=CENTER)\n        self.idEntry.pack()\n\n        # ============================ season ============================\n        self.seasonVar = StringVar()\n\n        seasonFrame = Frame(self.rightFrame, )\n        seasonLabel = Label(seasonFrame, text='Registering for:')\n        fallRadioBtn = ttk.Radiobutton(seasonFrame, text='Fall', variable=self.seasonVar, value='Fall')\n        summerRadioBtn = ttk.Radiobutton(seasonFrame, text='Summer', variable=self.seasonVar, value='Summer')\n        springRadioBtn = ttk.Radiobutton(seasonFrame, text='Spring', variable=self.seasonVar, value='Spring')\n        winterRadioBtn = ttk.Radiobutton(seasonFrame, text='Winter', variable=self.seasonVar, value='Winter')\n\n        seasonFrame.grid(row=4, column=1, columnspan=4)\n        seasonLabel.grid(row=0, column=0, padx=10)\n        fallRadioBtn.grid(row=0, column=1, padx=10)\n        winterRadioBtn.grid(row=0, column=2, padx=10)\n        springRadioBtn.grid(row=0, column=3, padx=10)\n        summerRadioBtn.grid(row=0, column=4)\n\n        # ============================ major & minor ============================\n        careerFrame = Frame(self.rightFrame)\n        careerFrame.grid(row=6, column=1, columnspan=4)\n\n        majorLabel = Label(careerFrame, text='Major(s): ')\n        majorLabel.grid(row=0, column=0)\n\n        self.majorVar = StringVar()\n        self.majorVar.set(self.majorsList[0])\n        majorMenu = ttk.OptionMenu(careerFrame, self.majorVar, *self.majorsList)\n        majorMenu.grid(row=0, column=1)\n\n        mblank = Frame(careerFrame, width=75).grid(row=0, column=2)\n\n        self.minorVar = StringVar()\n        self.minorVar.set(self.minorsList[0])\n        minorMenu = ttk.OptionMenu(careerFrame, self.minorVar, *self.minorsList)\n        minorMenu.grid(row=0, column=4)\n\n        minorLabel = Label(careerFrame, text='Minor(s): ')\n        minorLabel.grid(row=0, column=3)\n\n        # ============================ credits ============================\n        credFrame = Frame(self.rightFrame, )\n        credFrame.grid(row=8, column=1, columnspan=4)\n\n        credLabel1 = Label(credFrame, text='Earned:')\n        self.earnCredEntry = ttk.Entry(credFrame, width=3, justify=CENTER, state=DISABLED)\n        credLabel2 = Label(credFrame, text='credits')\n\n        credLabel1.grid(row=0, column=0)\n        self.earnCredEntry.grid(row=0, column=1)\n        credLabel2.grid(row=0, column=2)\n\n        cblank = Frame(credFrame, width=130).grid(row=0, column=3)\n\n        credLabel3 = Label(credFrame, text='Currently Enrolled in')\n        self.enrollCredVar = IntVar()\n        self.enrollCredEntry = ttk.Entry(credFrame, width=3, textvariable=self.enrollCredVar, justify=CENTER)\n        credLabel4 = Label(credFrame, text='credits')\n\n        credLabel4.grid(row=0, column=4)\n        self.enrollCredEntry.grid(row=0, column=5)\n        credLabel3.grid(row=0, column=6)\n\n        # ====================== Enrollment Date ========================\n        enrlDateFrame = ttk.Frame(self.rightFrame)\n        enrlDateFrame.grid(row=10, column=2, columnspan=2)\n\n        enrlDate = Label(enrlDateFrame, text='Enrollment Date:')\n        enrlDate.pack(side=LEFT)\n\n        self.enrlDateEntry = ttk.Entry(enrlDateFrame, width=8, justify=CENTER)\n        self.enrlDateEntry.pack()\n\n        # ============================ Course table ============================\n        courseTableFrame = Frame(self.rightFrame)\n        courseTableFrame.grid(row=12, column=1, columnspan=4)\n\n        self.courseTree = ttk.Treeview(courseTableFrame, height=7, style=\"mystyle.Treeview\") # TIP: height is number of rows\n        self.courseTree.pack()\n\n        self.courseTree['columns'] = (\"course#\", \"title\", \"cred\", \"gen/elect\")\n\n        self.courseTree.column(\"#0\", width=0, stretch=NO)   # important\n        self.courseTree.column(\"course#\", anchor=CENTER, width=80) # anchor for the data in the column\n        self.courseTree.column(\"title\", anchor=CENTER, width=295)\n        self.courseTree.column(\"cred\", anchor=CENTER, width=25)\n        self.courseTree.column(\"gen/elect\", anchor=CENTER, width=100)\n\n        self.courseTree.heading(\"course#\", text='Course#', anchor=CENTER) # anchor for the title of the column\n        self.courseTree.heading(\"title\", text='Title', anchor=CENTER)\n        self.courseTree.heading(\"cred\", text='CH', anchor=CENTER)\n        self.courseTree.heading(\"gen/elect\", text='Gen ed/Elect', anchor=CENTER)\n\n        # ===================== backup course ===================\n        backupCourseFrame = Frame(self.rightFrame)\n        backupCourseFrame.grid(row=13, column=1, columnspan=4)\n\n        backuplabel = Label(backupCourseFrame, text=\"Back-up Courses\").pack(anchor=CENTER)\n\n        self.backupCourseTree = ttk.Treeview(backupCourseFrame, height=2, style=\"mystyle.Treeview\")\n        self.backupCourseTree.pack()\n\n        self.backupCourseTree['columns'] = (\"course#\", \"title\", \"cred\", \"gen/elect\")\n\n        self.backupCourseTree.column(\"#0\", width=0, stretch=NO)\n        self.backupCourseTree.column(\"course#\", anchor=CENTER, width=80)\n        self.backupCourseTree.column(\"title\", anchor=CENTER, width=295)\n        self.backupCourseTree.column(\"cred\", anchor=CENTER, width=25)\n        self.backupCourseTree.column(\"gen/elect\", anchor=CENTER, width=100)\n\n        self.backupCourseTree.heading(\"course#\", text='Course#', anchor=CENTER)  # anchor for the title of the column\n        self.backupCourseTree.heading(\"title\", text='Title', anchor=CENTER)\n        self.backupCourseTree.heading(\"cred\", text='CH', anchor=CENTER)\n        self.backupCourseTree.heading(\"gen/elect\", text='Gen ed/Elect', anchor=CENTER)\n\n        # ====================== memo ========================\n        memoFrame = ttk.LabelFrame(self.rightFrame, text='Memo:')\n        memoFrame.grid(row=15, column=2, columnspan=2)\n\n        self.memoEntry = Text(memoFrame, width=50, height=5)\n        self.memoEntry.pack()\n\n        # ===================== add remove course ==================\n        coursebuttonFrame = Frame(self.rightFrame)\n        # courseLabelFrame.grid(row=17, column=1, columnspan=3)\n        coursebuttonFrame.grid(row=12, column=5, padx=20)\n\n        addcoursebutton = ttk.Button(coursebuttonFrame, text=\"Add\", command=self.planningWorksheet_addCourseButton)\n        addcoursebutton.pack(side=TOP)\n\n        rmcoursebutton = ttk.Button(coursebuttonFrame, text=\"Remove\", command=self.planningWorksheet_delCourseButton)\n        rmcoursebutton.pack(side=BOTTOM)\n\n        # backup course\n        bcoursebuttonFrame = Frame(self.rightFrame)\n        bcoursebuttonFrame.grid(row=13, column=5, padx=20)\n\n        addbackupbutton = ttk.Button(bcoursebuttonFrame, text=\"Add\", command=self.planningWorksheet_addBackupCourseButton)\n        addbackupbutton.pack(side=TOP)\n\n        rmbackupbutton = ttk.Button(bcoursebuttonFrame, text=\"Remove\", command=self.planningWorksheet_delBackupCourseButton)\n        rmbackupbutton.pack(side=TOP)\n\n    def planningWorksheet_addCourseButton(self):\n        t = Toplevel(self.mainwin)\n        t.wm_title(\"Search for Course\")\n        t.geometry(\"450x125\")\n        t.resizable(width=FALSE, height=FALSE)\n\n        self.mainwin.eval(f'tk::PlaceWindow {str(t)} center')\n\n        def courseSearch(e):\n            course = entry.get()\n            if len(course) > 7:\n                if len(course.split()[1]) == 3:\n                    pub.sendMessage(\"request_course#\", sub=course.split()[0], cat=course.split()[1])\n                    self.resultVar.set(\n                        self.addCourseSearchResult[0] + \" \" + self.addCourseSearchResult[1] + \" \" * 3 +\n                        self.addCourseSearchResult[2] + \" \" * 3 +\n                        self.addCourseSearchResult[3])\n                else:\n                    self.resultVar.set(\"\")\n            else:\n                self.resultVar.set(\"\")\n\n        def addCourse():\n            self.courseTree.insert(parent='', index='end', iid=self.courseTree_counter, text=\"\",\n                                   values=(self.addCourseSearchResult[0] + self.addCourseSearchResult[1],\n                                           self.addCourseSearchResult[2],\n                                           int(float(self.addCourseSearchResult[3])),\n                                           genEntry.get()))\n            self.courseTree_counter += 1\n            genEntry.delete(0, END)\n\n            prevcred = self.enrollCredVar.get()\n            self.enrollCredVar.set(prevcred + int(float(self.addCourseSearchResult[3])))\n\n        f1 = Frame(t)\n        f1.pack(anchor=CENTER, pady=5)\n\n        l1 = Label(f1, text=\"Course Number:\").pack(side=LEFT)\n        entry = ttk.Entry(f1, width=10, justify=CENTER)\n        entry.pack(side=LEFT)\n\n        entry.bind('<KeyRelease>', courseSearch) # for auto search\n\n        # sbutton =Button(f1, text=\"Search\")\n        # sbutton.pack(side=LEFT)\n        # sbutton['command'] = lambda: addCourseB2(entry.get())\n\n        rf = Frame(t)   # result frame\n        rf.pack(anchor=CENTER)\n\n        resultEntry = ttk.Entry(rf, textvariable = self.resultVar, state=DISABLED, justify=CENTER, width=50)\n        resultEntry.pack(side=TOP)\n\n        gf = Frame(t)   # gen frame\n        gf.pack(anchor=CENTER)\n\n        l2 = Label(gf, text=\"gen ed/elect:\").pack(side=LEFT, anchor=NW)\n\n        genEntry = ttk.Entry(gf)\n        genEntry.pack(side=TOP)\n\n        addButton = Button(gf, text=\"Add\", command=addCourse)\n        addButton.pack(side=TOP)\n\n    def planningWorksheet_delCourseButton(self):\n        for course in self.courseTree.selection():\n            prevcred = self.enrollCredVar.get()\n            self.enrollCredVar.set(prevcred -  int(float(self.courseTree.item(course)['values'][2])) )\n\n            self.courseTree.delete(course)\n            self.courseTree_counter -= 1\n\n    def planningWorksheet_addBackupCourseButton(self):\n        t = Toplevel(self.mainwin)\n        t.wm_title(\"Search for Backup Course\")\n        t.geometry(\"450x125\")\n        t.resizable(width=FALSE, height=FALSE)\n\n        self.mainwin.eval(f'tk::PlaceWindow {str(t)} center')\n\n        def courseSearch(e):\n            course = entry.get()\n            if len(course) > 7:\n                if len(course.split()[1]) == 3:\n                    pub.sendMessage(\"request_course#\", sub=course.split()[0], cat=course.split()[1])\n                    self.resultVar.set(self.addCourseSearchResult[0] + \" \" + self.addCourseSearchResult[1] + \" \" * 3 +\n                                       self.addCourseSearchResult[2] + \" \" * 3 +\n                                       self.addCourseSearchResult[3])\n                else:\n                    self.resultVar.set(\"\")\n            else:\n                self.resultVar.set(\"\")\n\n        def addCourse():\n            self.backupCourseTree.insert(parent='', index='end', iid=self.backupCourseTree_counter, text=\"\",\n                                   values=(self.addCourseSearchResult[0] + self.addCourseSearchResult[1],\n                                           self.addCourseSearchResult[2],\n                                           int(float(self.addCourseSearchResult[3])),\n                                           genEntry.get()))\n            self.backupCourseTree_counter += 1\n            genEntry.delete(0, END)\n\n            prevcred = self.enrollCredVar.get()\n            self.enrollCredVar.set(prevcred + int(float(self.addCourseSearchResult[3])))\n\n        f1 = Frame(t)\n        f1.pack(anchor=CENTER, pady=5)\n\n        l1 = Label(f1, text=\"Course Number:\").pack(side=LEFT)\n        entry = ttk.Entry(f1, width=10, justify=CENTER)\n        entry.pack(side=LEFT)\n\n        entry.bind('<KeyRelease>', courseSearch) # for auto search\n\n        rf = Frame(t)   # result frame\n        rf.pack(anchor=CENTER)\n\n        resultEntry = ttk.Entry(rf, textvariable = self.resultVar, state=DISABLED, justify=CENTER, width=50)\n        resultEntry.pack(side=TOP)\n\n        gf = Frame(t)   # gen frame\n        gf.pack(anchor=CENTER)\n\n        l2 = Label(gf, text=\"gen ed/elect:\").pack(side=LEFT, anchor=NW)\n\n        genEntry = ttk.Entry(gf)\n        genEntry.pack(side=TOP)\n\n        addButton = Button(gf, text=\"Add\", command=addCourse)\n        addButton.pack(side=TOP)\n\n    def planningWorksheet_delBackupCourseButton(self):\n        for course in self.backupCourseTree.selection():\n            self.backupCourseTree.delete(course)\n            self.backupCourseTree_counter -= 1\n\n    def planningWorksheet_reset(self):\n        self.fourYearCourses.clear()\n        self.nameEntry.delete(0, END)\n        self.idEntry.delete(0, END)\n\n        self.enrollCredVar.set(0)\n\n        self.earnCredEntry['state'] = NORMAL\n        self.earnCredEntry.delete(0, END)\n        self.earnCredEntry['state'] = 'readonly'\n\n        self.enrlDateEntry.delete(0, END)\n        self.memoEntry.delete('1.0', 'end')\n\n        for course in self.courseTree.get_children():\n            self.courseTree.delete(course)\n        self.courseTree_counter = 0\n\n        for course in self.backupCourseTree.get_children():\n            self.backupCourseTree.delete(course)\n        self.backupCourseTree_counter = 0\n\n    def planningWorksheet_fill(self, obj, tcred, courses, numbCourse, bcourses, courseHist):  # (py dict, total cred, 2d course array, course size) fyp - four year plan\n        # clear data in widgets\n        self.planningWorksheet_reset()\n\n        self.fourYearCourses = courseHist\n        self.nameEntry.insert(END, obj['name'])\n        self.idEntry.insert(END, obj['s_id'])\n        self.seasonVar.set(obj['registering_for'])\n\n        '''\n        for i in range( len(self.majorsList) ):\n            if obj['major'] == self.majorsList[i]:\n                self.majorVar.set(self.majorsList[i])\n\n        for i in range( len(self.minorsList) ):\n            if obj['minor'] == self.minorsList[i]:\n                self.minorVar.set(self.minorsList[i])\n        '''\n\n        self.earnCredEntry['state'] = NORMAL\n        self.earnCredEntry.insert(END, obj['credits'])\n        self.earnCredEntry['state'] = 'readonly'\n\n        self.enrollCredVar.set(tcred)\n\n        self.enrlDateEntry.insert(END, obj['enrll'])\n        self.memoEntry.insert('1.0', obj['memo'])\n\n        for c in courses:\n            self.courseTree.insert(parent='', index='end', iid=self.courseTree_counter, text=\"\", values=(c[0],c[1],c[2],c[3]))\n            self.courseTree_counter += 1\n\n        for c in bcourses:\n            self.backupCourseTree.insert(parent='', index='end', iid=self.backupCourseTree_counter, text=\"\", values=(c[0],c[1],c[2],c[3]))\n            self.backupCourseTree_counter += 1\n\n        self.courseTakenList_fill()\n\n    def populateFYP(self, arg1):\n        # delete what was previously there then insert\n        self.name2Entry.delete(0, END)\n        self.name2Entry.insert(END, arg1['name'])\n\n        self.id2Entry.delete(0, END)\n        self.id2Entry.insert(END, arg1['s_id'])\n\n        self.policyMemoEntry.delete('1.0', 'end')\n        self.policyMemoEntry.insert('1.0', arg1['memo'])\n\n    def courseTakenList_layout(self):\n        label = Label(self.courseTakenListFrame, text=\"Course Taken List\", font=('Helvetica', 19))\n        label.pack(anchor=CENTER, side=TOP, pady=20)\n\n        self.courseTakenListTree = ttk.Treeview(self.courseTakenListFrame, show=\"tree\", height=38, style=\"mystyle.Treeview\")\n        self.courseTakenListTree.pack(side=TOP, padx=50, pady=10, fill=X)\n\n        self.courseTakenListTree.column(\"#0\")\n\n        for subj in self.subjectsList:\n            self.courseTakenListTree.insert(parent='', index='end', iid=self.courseTakenList_counter, text=str(subj))\n            self.courseTakenList_counter += 1\n\n    def courseTakenList_reset(self):\n        for subj in self.courseTakenListTree.get_children():\n            self.courseTakenListTree.delete(subj)\n        self.courseTakenList_counter = 0\n\n        for subj in self.subjectsList:\n            self.courseTakenListTree.insert(parent='', index='end', iid=self.courseTakenList_counter, text=str(subj))\n            self.courseTakenList_counter += 1\n\n    def courseTakenList_fill(self):\n        self.courseTakenList_reset()\n        for sem in self.fourYearCourses:\n            for course in sem:\n                for id in self.courseTakenListTree.get_children():\n                    if course[1] == self.courseTakenListTree.item(id)['text']:\n                        name = str(course[1] + \" \" + course[2] + \"\\t\" + course[3])\n                        self.courseTakenListTree.insert(parent=str(id), index='end', iid=self.courseTakenList_counter, text=name)\n                        self.courseTakenList_counter += 1\n\n        for id in self.courseTakenListTree.get_children():\n            if not self.courseTakenListTree.get_children(id):\n                self.courseTakenListTree.delete(id)\n\n    def menuBar(self):\n        menu = Menu(self.mainwin, tearoff=0)\n        self.mainwin.config(menu=menu)\n\n        schedule = Menu(menu)\n        menu.add_cascade(label='Schedule', menu=schedule)\n        self.scheduleMenu(schedule)\n\n        load = Menu(menu)\n        menu.add_cascade(label='View', menu=load)\n        self.loadMenu(load)\n\n        DB = Menu(menu)\n        menu.add_cascade(label='Update DB', menu=DB)\n        self.DataBaseMenu(DB)\n\n        theme = Menu(menu)\n        menu.add_cascade(label='Themes', menu=theme)\n        self.themeMenu(theme)\n\n    # schedule menu dropdown\n    def scheduleMenu(self, schedule):\n        schedule.add_command(label='New...', command=self.newSchedule)\n        schedule.add_command(label='Open...', command=self.openSchedule)\n\n        recent = Menu(schedule)\n        schedule.add_cascade(label=\"Open recent...\", menu=recent)\n        recent.add_separator()\n        recent.add_command(label='Clear', command=self.openRecentSchedule)\n\n        schedule.add_separator()\n        schedule.add_command(label='Save', command=self.saveSchedule)\n        schedule.add_command(label=\"Save as...\", command=self.saveAsSchedule)\n        schedule.add_separator()\n        schedule.add_command(label='Export', command=self.exportSchedule)\n        schedule.add_command(label='Print', command=self.printSchedule)\n\n    def newSchedule(self):\n        self.planningWorksheet_reset()\n        self.courseTakenList_reset()\n\n    def openSchedule(self):\n        t = Toplevel(self.mainwin)\n        t.wm_title(\"Search for Student\")\n        t.geometry(\"450x125\")\n        t.resizable(width=FALSE, height=FALSE)\n\n        self.mainwin.eval(f'tk::PlaceWindow {str(t)} center')\n\n        def openScheduleSearchButton():\n            name = fnameE.get() + \" \" + lnameE.get()\n            id = idE.get()\n            if name != \"\" and id != \"\":\n                pub.sendMessage(\"request_PPW\", name=name, id=int(id))\n                t.destroy()\n\n        nameFrame = Frame(t)\n        nameFrame.pack(side=TOP,anchor='w', padx=20, pady=10)\n\n        idFrame = Frame(t)\n        idFrame.pack(side=TOP, anchor='w', padx=20)\n\n        butFrame = Frame(t)\n        butFrame.pack(side=BOTTOM, anchor=CENTER, pady=10)\n\n        label2 = Label(nameFrame, text='First name:').pack(side=LEFT)\n        fnameE = ttk.Entry(nameFrame, width=10)\n        fnameE.pack(side=LEFT)\n\n        lnameE = ttk.Entry(nameFrame, width=15)\n        lnameE.pack(side=RIGHT)\n        label3 = Label(nameFrame, text='Last name:').pack(side=RIGHT)\n\n        label3 = Label(idFrame, text='Student Id:').pack(side=LEFT)\n        idE = ttk.Entry(idFrame, width=10)\n        idE.pack(side=LEFT)\n\n        searchB = Button(butFrame, text='Search', command=openScheduleSearchButton)\n        searchB.pack()\n\n    def openRecentSchedule(self):\n        print(\"Open schedule\")\n\n    def saveSchedule(self):\n        print(\"Saved schedule\")\n\n    def saveAsSchedule(self):\n        print(\"Save schedule as..\")\n\n    def exportSchedule(self):\n        print(\"Export schedule\")\n\n    def printSchedule(self):\n        print(\"Print schedule\")\n\n    def loadMenu(self, major):\n        major.add_command(label='Four Year Plan', command=self.showFourYearPlan)\n        major.add_command(label='Course Taken List', command=self.showCourseTakenList)\n        major.add_separator()\n        major.add_command(label='Major Checklist')\n        major.add_command(label='Minor Checklist')\n\n    def showFourYearPlan(self):\n        self.courseTakenListFrame.place_forget()\n        self.leftFrame.place(relwidth=0.48, relheight=0.91, relx=0.01, rely=0.02)\n\n    def showCourseTakenList(self):\n        self.leftFrame.place_forget()\n        self.courseTakenListFrame.place(relwidth=0.48, relheight=0.91, relx=0.01, rely=0.02)\n\n    # data base menu dropdown\n    def DataBaseMenu(self, DB):\n        DB.add_command(label='Current Semester Course')\n        DB.add_separator()\n        DB.add_command(label='Add/Remove a Department')\n        DB.add_command(label='Add/remove a Major')\n        DB.add_command(label='Add/Remove a minor')\n\n    def themeMenu(self, theme):\n        #s = ThemedTk(self.mainwin)\n        '''\n        def lightMode(s):\n            s.set_theme(\"plastik\")\n        def darkMode(s):\n            s.set_theme(\"black\")\n        '''\n        #theme.add_command(label='Light Mode', command=)\n        theme.add_command(label='Dark Mode')\n\n    def createTable(self, semester, x, y):\n        if self.semesterCounter % 2 != 0:\n            self.yearCounter += 1\n\n        semesterLabel = Label(self.semesterFrame, text=semester, font=('Helvetica', 15))\n        semesterLabel.pack(expand=1)\n        semesterLabel.place(x=x, y=y-25)\n\n        self.semesterTree = ttk.Treeview(self.semesterFrame, height=7)  # TIP: height is number of rows\n        self.semesterTree.pack(expand=1)\n        self.semesterTree.place(x=x, y=y)\n\n        self.semesterTree['columns'] = (\"course#\", \"title\", \"cred\")\n\n        self.semesterTree.column(\"#0\", width=0, stretch=NO)  # important\n        self.semesterTree.column(\"course#\", anchor=CENTER, width=75)  # anchor for the data in the column\n        self.semesterTree.column(\"title\", anchor=W, width=295)\n        self.semesterTree.column(\"cred\", anchor=CENTER, width=62)\n        # self.semesterTree.column(\"taken\", anchor=CENTER, width=30)\n\n        self.semesterTree.heading(\"course#\", text='Course #', anchor=CENTER)  # anchor for the title of the column\n        self.semesterTree.heading(\"title\", text='Title', anchor=CENTER)\n        self.semesterTree.heading(\"cred\", text='Crd. Hr.', anchor=CENTER)\n        # self.semesterTree.heading(\"taken\", text='Cls. Taken', anchor=CENTER)\n\n    def createSemesterBtn(self, semester):\n        if self.counter == 1:\n            self.createTable(semester, 455, self.yPos)\n            self.yPos = self.yPos + 220\n            self.addSemesterBtn.place(x=15, y=self.yPos)\n            self.counter=0\n        else:\n            self.createTable(semester, 15, self.yPos)\n            self.addSemesterBtn.place(x=455, y=self.yPos)\n            self.counter=1
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../View.py b/../View.py
---- a/../View.py	(revision 86eabedf844c4ab7f8e5118f938ae345c211359c)
-+++ b/../View.py	(date 1616534605918)
-@@ -37,7 +37,7 @@
- 
-         self.fourYearCourses = []
- 
--        self.counter= 0
-+        self.counter = 0
- 
-         self.layout()
-         self.menuBar()
-@@ -69,7 +69,11 @@
-         scrollbar = ttk.Scrollbar(self.leftFrame, orient=VERTICAL, command=canvas.yview)
-         scrollbar.pack(side=RIGHT, fill=Y)
- 
-+        scrollbar2 = ttk.Scrollbar(self.leftFrame, orient=HORIZONTAL, command=canvas.xview)
-+        scrollbar2.pack(side=BOTTOM, fill=X)
-+
-         canvas.configure(yscrollcommand=scrollbar.set)
-+        canvas.configure(xscrollcommand=scrollbar2.set)
-         canvas.bind('<Configure>', lambda e: canvas.configure(scrollregion=canvas.bbox("all")))
-         self.innerLeftFrame = Frame(canvas)
-         self.innerLeftFrame.pack(expand=1)
-@@ -117,22 +121,17 @@
-         self.semesterFrame.pack(expand=1)
- 
-         self.yearCounter=1
--        self.semesterCounter=1
-+        self.semesterCounter=0
-         self.yPos=50
--        semTable = []
-+        self.semLabel = []
-+        self.semTable = []
- 
--        semTable.append(self.createTable("Fall 2020", 15, self.yPos))
--        semTable.append(self.createTable("Spring 2021", 455, self.yPos))
--        self.yPos = self.yPos + 220
--        semTable.append(self.createTable("Fall 2021", 15, self.yPos))
--        semTable.append(self.createTable("Spring 2022", 455, self.yPos))
--        self.yPos = self.yPos + 220
--        semTable.append(self.createTable("Fall 2022", 15, self.yPos))
--        semTable.append(self.createTable("Spring 2023", 455, self.yPos))
--        self.yPos = self.yPos + 220
--        semTable.append(self.createTable("Fall 2023", 15, self.yPos))
--        semTable.append(self.createTable("Spring 2024", 455, self.yPos))
--        self.yPos = self.yPos + 220
-+        for i in range(8):
-+            if self.semesterCounter % 2 == 0:
-+                self.semTable.append(self.createTable("Fall 2020", 15, self.yPos))
-+            else:
-+                self.semTable.append(self.createTable("Spring 2021", 455, self.yPos))
-+
-         # when inserting 'iid' needs to be different
-         '''
-         for c in arg3:
-@@ -542,16 +541,32 @@
- 
-         self.courseTakenList_fill()
- 
--    def populateFYP(self, arg1):
-+    def fourYearPlan_fill(self, obj, courseHist):
-+        self.semTableTree_counter = 0
-+
-         # delete what was previously there then insert
-         self.name2Entry.delete(0, END)
--        self.name2Entry.insert(END, arg1['name'])
-+        self.name2Entry.insert(END, obj['name'])
- 
-         self.id2Entry.delete(0, END)
--        self.id2Entry.insert(END, arg1['s_id'])
-+        self.id2Entry.insert(END, obj['s_id'])
-+
-+        index = -1
-+        for sem in self.fourYearCourses:
-+                index+=1
-+                self.semTableTree_counter = 0
-+                for course in sem:
-+                        print(courseHist)
-+                        self.semTable[index].insert(parent='', index='end', text="",
-+                                               values=(course[1] + " " + course[2], course[3], course[4]))
-+                        print(course[1] + " " + course[2] + "\t" + course[3] + " " + course[4])
-+                        self.semTableTree_counter += 1
-+
-+
-+
- 
-         self.policyMemoEntry.delete('1.0', 'end')
--        self.policyMemoEntry.insert('1.0', arg1['memo'])
-+        self.policyMemoEntry.insert('1.0', courseHist['policies'])
- 
-     def courseTakenList_layout(self):
-         label = Label(self.courseTakenListFrame, text="Course Taken List", font=('Helvetica', 19))
-@@ -643,6 +658,7 @@
-             id = idE.get()
-             if name != "" and id != "":
-                 pub.sendMessage("request_PPW", name=name, id=int(id))
-+                pub.sendMessage("request_FYP", name=name, id=int(id))
-                 t.destroy()
- 
-         nameFrame = Frame(t)
-@@ -719,37 +735,41 @@
-         theme.add_command(label='Dark Mode')
- 
-     def createTable(self, semester, x, y):
--        if self.semesterCounter % 2 != 0:
--            self.yearCounter += 1
-+            enfOfArray = len(self.semTable)
-+            endOfSemLabel = len(self.semLabel)
- 
--        semesterLabel = Label(self.semesterFrame, text=semester, font=('Helvetica', 15))
--        semesterLabel.pack(expand=1)
--        semesterLabel.place(x=x, y=y-25)
-+            self.semLabel.append(Label(self.semesterFrame, text=semester, font=('Helvetica', 15)))
-+            self.semLabel[endOfSemLabel].pack(expand=1)
- 
--        self.semesterTree = ttk.Treeview(self.semesterFrame, height=7)  # TIP: height is number of rows
--        self.semesterTree.pack(expand=1)
--        self.semesterTree.place(x=x, y=y)
-+            self.semTable.append(ttk.Treeview(self.semesterFrame, height=7))
- 
--        self.semesterTree['columns'] = ("course#", "title", "cred")
-+            if self.semesterCounter % 2 == 0:
-+                self.semTable[enfOfArray].pack(expand=1)
-+                self.semTable[enfOfArray].place(x=15, y=self.yPos)
-+                self.semLabel[endOfSemLabel].place(x=15, y=self.yPos - 25)
-+            else:
-+                self.semTable[enfOfArray].pack(expand=1)
-+                self.semTable[enfOfArray].place(x=455, y=self.yPos)
-+                self.semLabel[endOfSemLabel].place(x=455, y=self.yPos - 25)
-+                self.yPos += 220
-+            self.semesterCounter += 1
- 
--        self.semesterTree.column("#0", width=0, stretch=NO)  # important
--        self.semesterTree.column("course#", anchor=CENTER, width=75)  # anchor for the data in the column
--        self.semesterTree.column("title", anchor=W, width=295)
--        self.semesterTree.column("cred", anchor=CENTER, width=62)
--        # self.semesterTree.column("taken", anchor=CENTER, width=30)
-+
-+            self.semTable[enfOfArray]['columns']= ("course#", "title", "cred")
-+            self.semTable[enfOfArray].column("#0", width=0, stretch=NO)  # important
-+            self.semTable[enfOfArray].column("course#", anchor=CENTER, width=75)  # anchor for the data in the column
-+            self.semTable[enfOfArray].column("title", anchor=W, width=295)
-+            self.semTable[enfOfArray].column("cred", anchor=CENTER, width=62)
-+            # self.semesterTree.column("taken", anchor=CENTER, width=30)
- 
--        self.semesterTree.heading("course#", text='Course #', anchor=CENTER)  # anchor for the title of the column
--        self.semesterTree.heading("title", text='Title', anchor=CENTER)
--        self.semesterTree.heading("cred", text='Crd. Hr.', anchor=CENTER)
--        # self.semesterTree.heading("taken", text='Cls. Taken', anchor=CENTER)
-+            self.semTable[enfOfArray].heading("course#", text='Course #', anchor=CENTER)  # anchor for the title of the column
-+            self.semTable[enfOfArray].heading("title", text='Title', anchor=CENTER)
-+            self.semTable[enfOfArray].heading("cred", text='Crd. Hr.', anchor=CENTER)
- 
-     def createSemesterBtn(self, semester):
--        if self.counter == 1:
--            self.createTable(semester, 455, self.yPos)
--            self.yPos = self.yPos + 220
--            self.addSemesterBtn.place(x=15, y=self.yPos)
--            self.counter=0
--        else:
-+        if self.semesterCounter % 2 == 0:
-             self.createTable(semester, 15, self.yPos)
-             self.addSemesterBtn.place(x=455, y=self.yPos)
--            self.counter=1
-\ No newline at end of file
-+        else:
-+            self.createTable(semester, 455, self.yPos)
-+            self.addSemesterBtn.place(x=15, y=self.yPos)
-\ No newline at end of file
-Index: ../Model.py
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>from tkinter.filedialog import askopenfilename\nimport json\nfrom pubsub import pub      # pip install PyPubSub\nimport pymongo\n\nclient = pymongo.MongoClient(\"mongodb+srv://COSC425AAT:ucciEcY4ItzL6BRN@cluster0.qmhln.mongodb.net/myFirstDatabase?retryWrites=true&w=majority\")\ndb = client['COSC425AAT']\n\nclass Model:\n    def __init__(self):\n        return\n\n    def listAllMajors(self):\n        myCol = db.get_collection('Department')\n        obj = myCol.find({'Plan Type': 'Major'})\n        majors = []\n        for i in obj:\n            majors.append(i['Acad Plan'])\n        return majors\n\n    def listAllMinors(self):\n        myCol = db.get_collection('Department')\n        obj = myCol.find({'Plan Type': 'Minor'})\n        minors = []\n        for i in obj:\n            minors.append(i['Acad Plan'])\n        return minors\n\n    # Get a course by searching for subject and catalog\n    def getCoursebySubCat(self, sub, cat):\n        myCol = db.get_collection('Course')\n        spacer = \" \"\n        newCat = spacer + cat\n        obj = myCol.find_one({'$and': [{'Subject': sub}, {'Catalog': newCat}]})\n        courseInfo = []\n        courseInfo.append(obj['Subject'])\n        courseInfo.append(obj['Catalog'])\n        courseInfo.append(obj['Long Title'])\n        courseInfo.append(obj['Allowd Unt'])\n        return courseInfo\n\n    # Displays what prereqs are necessary for a subject + catalog\n    def getPreReq(subject, catalog):\n        myCol = db.get_collection('Course')\n        obj = myCol.find_one({'$and': [{'Subject': subject}, {'Catalog': catalog}]})\n        print(obj['RQ Descr(Descrlong)'])\n\n    def getSubjects(self):\n        myCol = db.get_collection('Catalog')\n        obj = myCol.distinct('Subject')\n        return obj\n\n    def getStudent(self, sname, sid):\n        myCol = db.get_collection('Student')\n        obj2 = myCol.aggregate([{u\"$project\": {u\"count\": {u\"$size\": u\"$course_taken\"}}}])\n        for i in obj2:\n            cnt = int(i['count'])\n        obj = myCol.find_one({'$and': [{'name': str(sname)}, {'s_id': int(sid)}]})\n        numbCourses = cnt\n        cred = 0\n        courses = []\n        backup = []\n        for c in obj['taking_course']:\n            courseID = c['subject'] + \" \" + c['catalog']\n            courses.append((courseID, c['title'], c['cred'], c['genED']))\n            cred += c['cred']\n\n        for c in obj['backup_course']:\n            courseID = c['subject']+ \" \" +c['catalog']\n            backup.append((courseID, c['title'], c['cred'], c['genED']))\n\n        courseList = []  # course list\n        fourList = []  # four year plan list (return value)\n        sem = \"1\"  # Keeps track of which semester in database\n        total = 0  # Total number of semesters\n        ctotal = 0  # Total number of courses in a semester\n\n        for i in obj['four_year']:\n\n            # Gets total number of semesters through error handling\n            for j in range(15):  # Max of 15 possible semesters taken\n                stri = \"semester_\"  # Append which semester to string\n                stri = stri + sem\n                try:  # Error checks is semester is out of range\n                    (i[stri])  # Sets the total to the currently viewed semester\n                    total = int(sem)\n                except KeyError as b:\n                    total = total  # Last none KeyError semester is stored\n                sem = str(int(sem) + 1)\n            # print(total)\n\n            for k in range(total):  # Iterates through each semester from previously calculated value\n                stri = \"semester_\"  # Appends which semester to a string\n                stri = stri + str(k + 1)\n                # Gets total number of courses through error handling\n                courseList = []\n                for l in range(8):  # Max of 8 possible courses taken during any given semester\n\n                    try:  # Checks for Array index error\n                        (obj['four_year'][0][stri][l])\n                        ctotal = l + 1  # Sets total number of courses to currently viewed course\n                        resl = [k, i[stri][l]['subject'], i[stri][l]['catalog'], i[stri][l]['title'],\n                                i[stri][l]['credits']]  # Creates a string value of each objects within array\n                        courseList.append(resl)  # Appends that string to a course list\n                    except IndexError as c:\n                        ctotal = ctotal  # Last none index error course number is stored\n                #print(ctotal)\n                fourList.append(courseList)  # Appends the course list to the four year plan list\n\n            # First array initializer corresponds to which semester you are viewing course for\n            # Ex.  fourList[0][1]  =  The first semester and the second course the took that semester\n\n            # All below represnt the second array initializer which corresponds to individual information for a course\n            # [0] = The first value indicates which semester the course is for\n            # [1] = The subject of the course\n            # [2] = The catalog of the course\n            # [3] = The title of the course\n            # [4] = The number of credits for the course\n\n            # [0, 'ENGL', '103', 'Composition and Research', '4']    Example output for fourList[0][2]\n\n        pub.sendMessage(\"PPW_information\", obj=obj, tcred=cred, courses=courses, numbCourse=numbCourses, bcourses=backup, courseHist=fourList)\n\n    def getFourYearLayout(sname, sid):\n        myCol = db.get_collection('FourYear')\n        crsList = []\n        obj = myCol.distinct('four_year.semester', {'id': sid})\n        for i in obj:\n            crsList.append(i)\n        print(crsList)\n\n        fourList = []\n        # For loop to iterate through all entries within the distinct list for comparison\n        # Length of course list is number of distinct semesters for a certain student\n        for x in range(len(crsList)):\n            # aggregate pipeline\n            pipe = myCol.aggregate([\n                {\n                    # unwind array for individual comparisons\n                    '$unwind': '$four_year'\n                },\n                {\n                    # match the semester with the distinct semester list\n                    '$match': {'four_year.semester': crsList[x],\n                               'id': sid,\n                               'name': sname}\n                },\n                {\n                    # group all values to a new object and get a count for total number of courses within\n                    '$group': {'_id': '$four_year.semester',\n                               'sub': {'$push': '$four_year.subject'},\n                               'cat': {'$push': '$four_year.catalog'},\n                               'tit': {'$push': '$four_year.title'},\n                               'crd': {'$push': '$four_year.cred'},\n                               # Number of courses within the semester\n                               'count': {'$sum': 1}\n                               }\n                },\n\n            ])\n            # Outputs all objects returned by pipeline aggregate and appends them to a list\n            # Through a double for loop iterating through the object and number of courses\n            for i in pipe:\n                val = i['count']\n                for j in range(val):\n                    str = [i['_id'], i['sub'][j], i['cat'][j], i['tit'][j], i['crd'][j]]\n                    fourList.append(str)\n\n        #How to access the elements within the list\n        # 0 - Semester  1 - Subject  2 - Catalog  3 - Title  4 - Credits\n\n        return fourList\n\n    def openJson(self):\n        path = askopenfilename(\n            initialdir=\"./\",\n            filetypes=[(\"JSON File\", \"*.json\"), (\"All Files\", \".\")],\n            title=\"Choose a Student Schedule file\")\n\n        if len(path) > 0:\n            with open(path) as f:\n                data = json.load(f)\n        else:\n            return\n\n        numbCourses = len(data['taking_course'])\n        cred = 0\n        courses = []\n        backup = []\n        for c in data['taking_course']:\n            courseID = [c['subject'], c['catalog']]\n            courses.append((courseID, c['title'], c['cred'], c['genED']))\n            cred += c['cred']\n\n        for c in data['backup_course']:\n            courseID = [c['subject'], c['catalog']]\n            backup.append((courseID, c['title'], c['cred'], c['genED']))\n\n        pub.sendMessage(\"PPW_information\", arg1=data, arg2=cred, arg3=courses, arg4=numbCourses, arg5=backup)
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/../Model.py b/../Model.py
---- a/../Model.py	(revision 86eabedf844c4ab7f8e5118f938ae345c211359c)
-+++ b/../Model.py	(date 1616534049564)
-@@ -120,6 +120,7 @@
-             # [0, 'ENGL', '103', 'Composition and Research', '4']    Example output for fourList[0][2]
- 
-         pub.sendMessage("PPW_information", obj=obj, tcred=cred, courses=courses, numbCourse=numbCourses, bcourses=backup, courseHist=fourList)
-+        pub.sendMessage("FYP_information", obj=obj, courseHist=fourList)
- 
-     def getFourYearLayout(sname, sid):
-         myCol = db.get_collection('FourYear')
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"d3030d7f-4345-4108-a3de-06b66e2166e9\" name=\"Default Changelist\" comment=\"GUI layout changes\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../View.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../View.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\n      <list>\n        <option value=\"quincden &lt;78387066+quincden@users.noreply.github.com&gt;\" />\n      </list>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"ProjectId\" id=\"1ooOcHdYy8DDlZBmYkOTgWDTh3m\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"TODO_SCOPE\" value=\"All Places\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../jsonAppend.py\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\n  </component>\n  <component name=\"RunManager\" selected=\"Python.Controller\">\n    <configuration name=\"Controller (1)\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"/usr/bin/python3.8\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$USER_HOME$/Devin\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$USER_HOME$/Devin/Controller.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Controller\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"/usr/bin/python3.9\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/..\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../Controller.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Model\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/..\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../Model.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"View\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/..\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../View.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Python.Controller\" />\n      <item itemvalue=\"Python.Controller (1)\" />\n      <item itemvalue=\"Python.Model\" />\n      <item itemvalue=\"Python.View\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.Controller\" />\n        <item itemvalue=\"Python.Model\" />\n        <item itemvalue=\"Python.View\" />\n        <item itemvalue=\"Python.Controller (1)\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"d3030d7f-4345-4108-a3de-06b66e2166e9\" name=\"Default Changelist\" comment=\"\" />\n      <created>1613949556023</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1613949556023</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Getting files\">\n      <created>1613949592873</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613949592873</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Getting files\">\n      <created>1613949845171</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613949845171</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Getting files\">\n      <created>1613960554545</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613960554545</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Getting files\">\n      <created>1613960559883</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613960559883</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Getting files\">\n      <created>1614029465316</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614029465316</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Major list dropdown\">\n      <created>1614034446593</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614034446593</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Major list dropdown\">\n      <created>1614134625833</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614134625833</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Reformatting Planning Sheet and Radio Buttons\">\n      <created>1614373713103</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614373713103</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Reformatting Planning Sheet and Radio Buttons\">\n      <created>1614373718853</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614373718853</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Reformatted and Radio Buttons\">\n      <created>1614374493258</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614374493258</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Reformatting Planning Sheet and Radio Buttons\">\n      <created>1614634080019</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614634080019</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Positioning Table\">\n      <created>1614638355548</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638355548</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Positioning Table\">\n      <created>1614638370535</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638370535</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Positioning Backup course table\">\n      <created>1614638613869</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638613869</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Updated for new json format&#10;&#10;Load backup courses and memo\">\n      <created>1614638687459</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638687459</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Positioning Backup course table\">\n      <created>1614642646848</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614642646848</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Positioning Backup course table\">\n      <created>1614900036709</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614900036709</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Positioning Backup course table\">\n      <created>1615160540514</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615160540514</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Positioning Backup course table\">\n      <created>1615362753449</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615362753449</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Positioning Backup course table\">\n      <created>1615412693079</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615412693079</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Positioning Backup course table\">\n      <created>1615875121724</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615875121724</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Positioning Backup course table\">\n      <created>1615949462988</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615949462988</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Implemented a majority of Four year Plan\">\n      <created>1615964814004</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615964814004</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"ttk Scrollbar\">\n      <created>1616014758814</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616014758814</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"ttk Scrollbar\">\n      <created>1616014803830</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616014803830</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"GUI layout changes and populating FYP\">\n      <created>1616114589948</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616114589948</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"GUI layout changes\">\n      <created>1616116033357</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616116033357</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"28\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ID_ORDER\">\n      <list>\n        <option value=\"Default.Root\" />\n        <option value=\"Default.Author\" />\n        <option value=\"Default.Date\" />\n        <option value=\"Default.Subject\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Getting files\" />\n    <MESSAGE value=\"Major list dropdown\" />\n    <MESSAGE value=\"Reformatted and Radio Buttons\" />\n    <MESSAGE value=\"Reformatting Planning Sheet and Radio Buttons\" />\n    <MESSAGE value=\"Positioning Table\" />\n    <MESSAGE value=\"Updated for new json format&#10;&#10;Load backup courses and memo\" />\n    <MESSAGE value=\"Positioning Backup course table\" />\n    <MESSAGE value=\"Implemented a majority of Four year Plan\" />\n    <MESSAGE value=\"ttk Scrollbar\" />\n    <MESSAGE value=\"GUI layout changes and populating FYP\" />\n    <MESSAGE value=\"GUI layout changes\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"GUI layout changes\" />\n  </component>\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 86eabedf844c4ab7f8e5118f938ae345c211359c)
-+++ b/.idea/workspace.xml	(date 1616532273033)
-@@ -2,7 +2,9 @@
- <project version="4">
-   <component name="ChangeListManager">
-     <list default="true" id="d3030d7f-4345-4108-a3de-06b66e2166e9" name="Default Changelist" comment="GUI layout changes">
-+      <change beforePath="$PROJECT_DIR$/../Controller.py" beforeDir="false" afterPath="$PROJECT_DIR$/../Controller.py" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/../Model.py" beforeDir="false" afterPath="$PROJECT_DIR$/../Model.py" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/../View.py" beforeDir="false" afterPath="$PROJECT_DIR$/../View.py" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-@@ -37,7 +39,7 @@
-     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
-     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
-     <property name="TODO_SCOPE" value="All Places" />
--    <property name="last_opened_file_path" value="$PROJECT_DIR$/../jsonAppend.py" />
-+    <property name="last_opened_file_path" value="$PROJECT_DIR$/../Controller.py" />
-     <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
-   </component>
-   <component name="RunManager" selected="Python.Controller">
-@@ -126,8 +128,8 @@
-       <method v="2" />
-     </configuration>
-     <list>
--      <item itemvalue="Python.Controller" />
-       <item itemvalue="Python.Controller (1)" />
-+      <item itemvalue="Python.Controller" />
-       <item itemvalue="Python.Model" />
-       <item itemvalue="Python.View" />
-     </list>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_3_22_21__1_52_PM__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21__1_52_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21__1_52_PM__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21__1_52_PM__Default_Changelist_.xml	(revision 35026e90a34848b9ef1c9d414ce78f88259ea1ee)
+++ /dev/null	(revision 35026e90a34848b9ef1c9d414ce78f88259ea1ee)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_3_22_21,_1_52_PM_[Default_Changelist]" date="1616435569711" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21,_1_52_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 3/22/21, 1:52 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"d3030d7f-4345-4108-a3de-06b66e2166e9\" name=\"Default Changelist\" comment=\"GUI layout changes\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_19_21,_2_10_PM_[Default_Changelist]/shelved.patch\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_19_21__2_10_PM__Default_Changelist_.xml\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21,_1_53_AM_[Default_Changelist]/shelved.patch\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21__1_53_AM__Default_Changelist_.xml\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../Model.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../Model.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/../View.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/../View.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"PREVIOUS_COMMIT_AUTHORS\">\n      <list>\n        <option value=\"quincden &lt;78387066+quincden@users.noreply.github.com&gt;\" />\n      </list>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n    <option name=\"RESET_MODE\" value=\"HARD\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"ProjectId\" id=\"1ooOcHdYy8DDlZBmYkOTgWDTh3m\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"TODO_SCOPE\" value=\"All Places\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../CS4YrPlan.png\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable\" />\n  </component>\n  <component name=\"RunManager\" selected=\"Python.Controller\">\n    <configuration name=\"Controller (1)\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"/usr/bin/python3.8\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$USER_HOME$/Devin\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$USER_HOME$/Devin/Controller.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Controller\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"/usr/bin/python3.9\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/..\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../Controller.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"Model\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/..\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../Model.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"View\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/..\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <module name=\"\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/../View.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <list>\n      <item itemvalue=\"Python.Controller (1)\" />\n      <item itemvalue=\"Python.Controller\" />\n      <item itemvalue=\"Python.Model\" />\n      <item itemvalue=\"Python.View\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.Controller\" />\n        <item itemvalue=\"Python.Model\" />\n        <item itemvalue=\"Python.View\" />\n        <item itemvalue=\"Python.Controller (1)\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"d3030d7f-4345-4108-a3de-06b66e2166e9\" name=\"Default Changelist\" comment=\"\" />\n      <created>1613949556023</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1613949556023</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Getting files\">\n      <created>1613949592873</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613949592873</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Getting files\">\n      <created>1613949845171</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613949845171</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Getting files\">\n      <created>1613960554545</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613960554545</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Getting files\">\n      <created>1613960559883</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1613960559883</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Getting files\">\n      <created>1614029465316</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614029465316</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Major list dropdown\">\n      <created>1614034446593</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614034446593</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Major list dropdown\">\n      <created>1614134625833</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614134625833</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Reformatting Planning Sheet and Radio Buttons\">\n      <created>1614373713103</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614373713103</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Reformatting Planning Sheet and Radio Buttons\">\n      <created>1614373718853</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614373718853</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Reformatted and Radio Buttons\">\n      <created>1614374493258</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614374493258</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Reformatting Planning Sheet and Radio Buttons\">\n      <created>1614634080019</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614634080019</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Positioning Table\">\n      <created>1614638355548</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638355548</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Positioning Table\">\n      <created>1614638370535</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638370535</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Positioning Backup course table\">\n      <created>1614638613869</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638613869</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"Updated for new json format&#10;&#10;Load backup courses and memo\">\n      <created>1614638687459</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614638687459</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"Positioning Backup course table\">\n      <created>1614642646848</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614642646848</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Positioning Backup course table\">\n      <created>1614900036709</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1614900036709</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Positioning Backup course table\">\n      <created>1615160540514</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615160540514</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Positioning Backup course table\">\n      <created>1615362753449</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615362753449</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Positioning Backup course table\">\n      <created>1615412693079</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615412693079</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Positioning Backup course table\">\n      <created>1615875121724</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615875121724</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Positioning Backup course table\">\n      <created>1615949462988</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615949462988</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Implemented a majority of Four year Plan\">\n      <created>1615964814004</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1615964814004</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"ttk Scrollbar\">\n      <created>1616014758814</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616014758814</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"ttk Scrollbar\">\n      <created>1616014803830</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616014803830</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"GUI layout changes and populating FYP\">\n      <created>1616114589948</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616114589948</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"GUI layout changes\">\n      <created>1616116033357</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616116033357</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"Partial Implementaion for poulating FYP\">\n      <created>1616534841015</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616534841015</updated>\n    </task>\n    <task id=\"LOCAL-00029\" summary=\"Horizontal Scrollbar\">\n      <created>1616542231783</created>\n      <option name=\"number\" value=\"00029\" />\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616542231783</updated>\n    </task>\n    <task id=\"LOCAL-00030\" summary=\"Finished populating Semesters\">\n      <created>1616718469254</created>\n      <option name=\"number\" value=\"00030\" />\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1616718469254</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"31\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ID_ORDER\">\n      <list>\n        <option value=\"Default.Root\" />\n        <option value=\"Default.Author\" />\n        <option value=\"Default.Date\" />\n        <option value=\"Default.Subject\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Getting files\" />\n    <MESSAGE value=\"Major list dropdown\" />\n    <MESSAGE value=\"Reformatted and Radio Buttons\" />\n    <MESSAGE value=\"Reformatting Planning Sheet and Radio Buttons\" />\n    <MESSAGE value=\"Positioning Table\" />\n    <MESSAGE value=\"Updated for new json format&#10;&#10;Load backup courses and memo\" />\n    <MESSAGE value=\"Positioning Backup course table\" />\n    <MESSAGE value=\"Implemented a majority of Four year Plan\" />\n    <MESSAGE value=\"ttk Scrollbar\" />\n    <MESSAGE value=\"GUI layout changes and populating FYP\" />\n    <MESSAGE value=\"GUI layout changes\" />\n    <MESSAGE value=\"Partial Implementaion for poulating FYP\" />\n    <MESSAGE value=\"Horizontal Scrollbar\" />\n    <MESSAGE value=\"Finished populating Semesters\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Finished populating Semesters\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 35026e90a34848b9ef1c9d414ce78f88259ea1ee)
+++ b/.idea/workspace.xml	(date 1617218412388)
@@ -1,14 +1,12 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="d3030d7f-4345-4108-a3de-06b66e2166e9" name="Default Changelist" comment="GUI layout changes">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_19_21,_2_10_PM_[Default_Changelist]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_19_21__2_10_PM__Default_Changelist_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21,_1_53_AM_[Default_Changelist]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21__1_53_AM__Default_Changelist_.xml" beforeDir="false" />
+    <list default="true" id="d3030d7f-4345-4108-a3de-06b66e2166e9" name="Default Changelist" comment="Filled policies portion of FYP">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21,_1_52_PM_[Default_Changelist]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_22_21__1_52_PM__Default_Changelist_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_21,_5_26_PM_[Default_Changelist]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_3_23_21__5_26_PM__Default_Changelist_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../Model.py" beforeDir="false" afterPath="$PROJECT_DIR$/../Model.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/../View.py" beforeDir="false" afterPath="$PROJECT_DIR$/../View.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -365,7 +363,14 @@
       <option name="project" value="LOCAL" />
       <updated>1616718469254</updated>
     </task>
-    <option name="localTasksCounter" value="31" />
+    <task id="LOCAL-00031" summary="Filled policies portion of FYP">
+      <created>1617005599922</created>
+      <option name="number" value="00031" />
+      <option name="presentableId" value="LOCAL-00031" />
+      <option name="project" value="LOCAL" />
+      <updated>1617005599922</updated>
+    </task>
+    <option name="localTasksCounter" value="32" />
     <servers />
   </component>
   <component name="Vcs.Log.History.Properties">
@@ -405,6 +410,7 @@
     <MESSAGE value="Partial Implementaion for poulating FYP" />
     <MESSAGE value="Horizontal Scrollbar" />
     <MESSAGE value="Finished populating Semesters" />
-    <option name="LAST_COMMIT_MESSAGE" value="Finished populating Semesters" />
+    <MESSAGE value="Filled policies portion of FYP" />
+    <option name="LAST_COMMIT_MESSAGE" value="Filled policies portion of FYP" />
   </component>
 </project>
\ No newline at end of file
